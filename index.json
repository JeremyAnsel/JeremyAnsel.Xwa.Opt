{
  "api/JeremyAnsel.Xwa.Opt.RotationScale.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.RotationScale.html",
    "title": "Class RotationScale",
    "keywords": "Class RotationScale Inheritance Object RotationScale Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : JeremyAnsel.Xwa.Opt Assembly : JeremyAnsel.Xwa.Opt.dll Syntax public class RotationScale Constructors | Improve this Doc View Source RotationScale() Declaration public RotationScale() Properties | Improve this Doc View Source Look Declaration public Vector Look { get; set; } Property Value Type Description Vector | Improve this Doc View Source Pivot Declaration public Vector Pivot { get; set; } Property Value Type Description Vector | Improve this Doc View Source Right Declaration public Vector Right { get; set; } Property Value Type Description Vector | Improve this Doc View Source Up Declaration public Vector Up { get; set; } Property Value Type Description Vector Methods | Improve this Doc View Source Clone() Declaration public RotationScale Clone() Returns Type Description RotationScale"
  },
  "api/JeremyAnsel.Xwa.Opt.PlayabilityMessageLevel.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.PlayabilityMessageLevel.html",
    "title": "Enum PlayabilityMessageLevel",
    "keywords": "Enum PlayabilityMessageLevel Namespace : JeremyAnsel.Xwa.Opt Assembly : JeremyAnsel.Xwa.Opt.dll Syntax public enum PlayabilityMessageLevel Fields Name Description Error Information Warning"
  },
  "api/JeremyAnsel.Xwa.Opt.OptFile.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.OptFile.html",
    "title": "Class OptFile",
    "keywords": "Class OptFile Inheritance Object OptFile Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : JeremyAnsel.Xwa.Opt Assembly : JeremyAnsel.Xwa.Opt.dll Syntax public class OptFile Fields | Improve this Doc View Source ScaleFactor Declaration public const float ScaleFactor = 0.0244140625F Field Value Type Description Single Properties | Improve this Doc View Source EngineGlowsCount Declaration public int EngineGlowsCount { get; } Property Value Type Description Int32 | Improve this Doc View Source FileName Declaration public string FileName { get; } Property Value Type Description String | Improve this Doc View Source HardpointsCount Declaration public int HardpointsCount { get; } Property Value Type Description Int32 | Improve this Doc View Source MaxSize Declaration public Vector MaxSize { get; } Property Value Type Description Vector | Improve this Doc View Source MaxTextureVersion Declaration public int MaxTextureVersion { get; } Property Value Type Description Int32 | Improve this Doc View Source Meshes Declaration public IList<Mesh> Meshes { get; } Property Value Type Description IList < Mesh > | Improve this Doc View Source MinSize Declaration public Vector MinSize { get; } Property Value Type Description Vector | Improve this Doc View Source Size Declaration public float Size { get; } Property Value Type Description Single | Improve this Doc View Source SpanSize Declaration public Vector SpanSize { get; } Property Value Type Description Vector | Improve this Doc View Source Textures Declaration public IDictionary<string, Texture> Textures { get; } Property Value Type Description IDictionary < String , Texture > | Improve this Doc View Source TexturesBitsPerPixel Declaration public int TexturesBitsPerPixel { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source CanTexturesBeConvertedWithoutLoss() Declaration public bool CanTexturesBeConvertedWithoutLoss() Returns Type Description Boolean | Improve this Doc View Source ChangeAxes(Int32, Int32, Int32) Declaration public void ChangeAxes(int axisX, int axisY, int axisZ) Parameters Type Name Description Int32 axisX Int32 axisY Int32 axisZ | Improve this Doc View Source CheckFlatTextures(Boolean) Declaration public IList<string> CheckFlatTextures(bool removeFlatTextures) Parameters Type Name Description Boolean removeFlatTextures Returns Type Description IList < String > | Improve this Doc View Source CheckPlayability() Declaration public IList<PlayabilityMessage> CheckPlayability() Returns Type Description IList < PlayabilityMessage > | Improve this Doc View Source Clone() Declaration public OptFile Clone() Returns Type Description OptFile | Improve this Doc View Source CompactBuffers() Declaration public void CompactBuffers() | Improve this Doc View Source CompactTextures() Declaration public void CompactTextures() | Improve this Doc View Source ComputeHitzones() Declaration public void ComputeHitzones() | Improve this Doc View Source ConvertTextures32To8() Declaration public void ConvertTextures32To8() | Improve this Doc View Source ConvertTextures8To32() Declaration public void ConvertTextures8To32() | Improve this Doc View Source FromFile(String) Declaration public static OptFile FromFile(string path) Parameters Type Name Description String path Returns Type Description OptFile | Improve this Doc View Source GenerateTexturesMipmaps() Declaration public void GenerateTexturesMipmaps() | Improve this Doc View Source GenerateTexturesNames() Declaration public void GenerateTexturesNames() | Improve this Doc View Source MergeMeshes(IEnumerable<Mesh>) Declaration public Mesh MergeMeshes(IEnumerable<Mesh> meshes) Parameters Type Name Description IEnumerable < Mesh > meshes Returns Type Description Mesh | Improve this Doc View Source Move(Single, Single, Single) Declaration public void Move(float moveX, float moveY, float moveZ) Parameters Type Name Description Single moveX Single moveY Single moveZ | Improve this Doc View Source RemoveTexturesMipmaps() Declaration public void RemoveTexturesMipmaps() | Improve this Doc View Source RemoveUnusedTextures() Declaration public void RemoveUnusedTextures() | Improve this Doc View Source Save(String) Declaration public void Save(string path) Parameters Type Name Description String path | Improve this Doc View Source Scale(Single) Declaration public void Scale(float scaleFactor) Parameters Type Name Description Single scaleFactor | Improve this Doc View Source Scale(Single, Single, Single) Declaration public void Scale(float scaleX, float scaleY, float scaleZ) Parameters Type Name Description Single scaleX Single scaleY Single scaleZ | Improve this Doc View Source SplitMesh(Mesh) Declaration public void SplitMesh(Mesh mesh) Parameters Type Name Description Mesh mesh"
  },
  "api/JeremyAnsel.Xwa.Opt.Nodes.NodeSwitchNode.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Nodes.NodeSwitchNode.html",
    "title": "Class NodeSwitchNode",
    "keywords": "Class NodeSwitchNode Inheritance Object Node NodeSwitchNode Inherited Members Node.Null Node.Offset Node.NodeType Node.Name Node.Nodes Node.Parameter1 Node.Parameter2 Node.SizeInFile Node.NameSize Node.NodesOffsetsSize Node.DataSize Node.NodesSize Node.ToString() Node.WriteName(BinaryWriter) Node.WriteNodesOffsets(BinaryWriter, Int32) Node.WriteNodes(BinaryWriter, Int32) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : JeremyAnsel.Xwa.Opt.Nodes Assembly : JeremyAnsel.Xwa.Opt.dll Syntax public sealed class NodeSwitchNode : Node Constructors | Improve this Doc View Source NodeSwitchNode() Declaration public NodeSwitchNode()"
  },
  "api/JeremyAnsel.Xwa.Opt.Nodes.Node.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Nodes.Node.html",
    "title": "Class Node",
    "keywords": "Class Node Inheritance Object Node EngineGlowNode FaceDataNode FaceGroupingNode HardpointNode MeshDescriptorNode MeshVerticesNode NodeGroupNode NodeReferenceNode NodeSwitchNode RotationScaleNode TextureAlphaNode TextureCoordinatesNode TextureNode VertexNormalsNode Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : JeremyAnsel.Xwa.Opt.Nodes Assembly : JeremyAnsel.Xwa.Opt.dll Syntax public abstract class Node Properties | Improve this Doc View Source DataSize Declaration protected virtual int DataSize { get; } Property Value Type Description Int32 | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source NameSize Declaration protected int NameSize { get; } Property Value Type Description Int32 | Improve this Doc View Source Nodes Declaration public IList<Node> Nodes { get; } Property Value Type Description IList < Node > | Improve this Doc View Source NodesOffsetsSize Declaration protected int NodesOffsetsSize { get; } Property Value Type Description Int32 | Improve this Doc View Source NodesSize Declaration protected int NodesSize { get; } Property Value Type Description Int32 | Improve this Doc View Source NodeType Declaration public NodeType NodeType { get; } Property Value Type Description NodeType | Improve this Doc View Source Null Declaration public static Node Null { get; } Property Value Type Description Node | Improve this Doc View Source Offset Declaration public int Offset { get; } Property Value Type Description Int32 | Improve this Doc View Source Parameter1 Declaration protected int Parameter1 { get; } Property Value Type Description Int32 | Improve this Doc View Source Parameter2 Declaration protected int Parameter2 { get; } Property Value Type Description Int32 | Improve this Doc View Source SizeInFile Declaration public int SizeInFile { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() | Improve this Doc View Source WriteName(BinaryWriter) Declaration protected void WriteName(BinaryWriter file) Parameters Type Name Description BinaryWriter file | Improve this Doc View Source WriteNodes(BinaryWriter, Int32) Declaration protected void WriteNodes(BinaryWriter file, int offset) Parameters Type Name Description BinaryWriter file Int32 offset | Improve this Doc View Source WriteNodesOffsets(BinaryWriter, Int32) Declaration protected void WriteNodesOffsets(BinaryWriter file, int offset) Parameters Type Name Description BinaryWriter file Int32 offset"
  },
  "api/JeremyAnsel.Xwa.Opt.Nodes.MeshVerticesNode.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Nodes.MeshVerticesNode.html",
    "title": "Class MeshVerticesNode",
    "keywords": "Class MeshVerticesNode Inheritance Object Node MeshVerticesNode Inherited Members Node.Null Node.Offset Node.NodeType Node.Name Node.Nodes Node.Parameter1 Node.Parameter2 Node.SizeInFile Node.NameSize Node.NodesOffsetsSize Node.NodesSize Node.WriteName(BinaryWriter) Node.WriteNodesOffsets(BinaryWriter, Int32) Node.WriteNodes(BinaryWriter, Int32) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : JeremyAnsel.Xwa.Opt.Nodes Assembly : JeremyAnsel.Xwa.Opt.dll Syntax public sealed class MeshVerticesNode : Node Constructors | Improve this Doc View Source MeshVerticesNode() Declaration public MeshVerticesNode() Properties | Improve this Doc View Source DataSize Declaration protected override int DataSize { get; } Property Value Type Description Int32 Overrides Node.DataSize | Improve this Doc View Source Vertices Declaration public IList<Vector> Vertices { get; } Property Value Type Description IList < Vector > Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Node.ToString()"
  },
  "api/JeremyAnsel.Xwa.Opt.Nodes.MeshDescriptorNode.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Nodes.MeshDescriptorNode.html",
    "title": "Class MeshDescriptorNode",
    "keywords": "Class MeshDescriptorNode Inheritance Object Node MeshDescriptorNode Inherited Members Node.Null Node.Offset Node.NodeType Node.Name Node.Nodes Node.Parameter1 Node.Parameter2 Node.SizeInFile Node.NameSize Node.NodesOffsetsSize Node.NodesSize Node.WriteName(BinaryWriter) Node.WriteNodesOffsets(BinaryWriter, Int32) Node.WriteNodes(BinaryWriter, Int32) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : JeremyAnsel.Xwa.Opt.Nodes Assembly : JeremyAnsel.Xwa.Opt.dll Syntax public sealed class MeshDescriptorNode : Node Constructors | Improve this Doc View Source MeshDescriptorNode() Declaration public MeshDescriptorNode() Properties | Improve this Doc View Source Center Declaration public Vector Center { get; set; } Property Value Type Description Vector | Improve this Doc View Source DataSize Declaration protected override int DataSize { get; } Property Value Type Description Int32 Overrides Node.DataSize | Improve this Doc View Source ExplosionType Declaration public ExplosionTypes ExplosionType { get; set; } Property Value Type Description ExplosionTypes | Improve this Doc View Source Max Declaration public Vector Max { get; set; } Property Value Type Description Vector | Improve this Doc View Source MeshType Declaration public MeshType MeshType { get; set; } Property Value Type Description MeshType | Improve this Doc View Source Min Declaration public Vector Min { get; set; } Property Value Type Description Vector | Improve this Doc View Source Span Declaration public Vector Span { get; set; } Property Value Type Description Vector | Improve this Doc View Source Target Declaration public Vector Target { get; set; } Property Value Type Description Vector | Improve this Doc View Source TargetId Declaration public int TargetId { get; set; } Property Value Type Description Int32 Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Node.ToString()"
  },
  "api/JeremyAnsel.Xwa.Opt.Hardpoint.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Hardpoint.html",
    "title": "Class Hardpoint",
    "keywords": "Class Hardpoint Inheritance Object Hardpoint Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : JeremyAnsel.Xwa.Opt Assembly : JeremyAnsel.Xwa.Opt.dll Syntax public class Hardpoint Constructors | Improve this Doc View Source Hardpoint() Declaration public Hardpoint() Properties | Improve this Doc View Source HardpointType Declaration public HardpointType HardpointType { get; set; } Property Value Type Description HardpointType | Improve this Doc View Source Position Declaration public Vector Position { get; set; } Property Value Type Description Vector Methods | Improve this Doc View Source Clone() Declaration public Hardpoint Clone() Returns Type Description Hardpoint"
  },
  "api/JeremyAnsel.Xwa.Opt.ExplosionTypes.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.ExplosionTypes.html",
    "title": "Enum ExplosionTypes",
    "keywords": "Enum ExplosionTypes Namespace : JeremyAnsel.Xwa.Opt Assembly : JeremyAnsel.Xwa.Opt.dll Syntax [Flags] public enum ExplosionTypes Fields Name Description None Type1 Type2 Type3"
  },
  "api/JeremyAnsel.Xwa.Opt.TextureCoordinates.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.TextureCoordinates.html",
    "title": "Struct TextureCoordinates",
    "keywords": "Struct TextureCoordinates Implements IEquatable < TextureCoordinates > Inherited Members Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : JeremyAnsel.Xwa.Opt Assembly : JeremyAnsel.Xwa.Opt.dll Syntax public struct TextureCoordinates : IEquatable<TextureCoordinates> Constructors | Improve this Doc View Source TextureCoordinates(Single, Single) Declaration public TextureCoordinates(float u, float v) Parameters Type Name Description Single u Single v Fields | Improve this Doc View Source Empty Declaration public static readonly TextureCoordinates Empty Field Value Type Description TextureCoordinates Properties | Improve this Doc View Source U Declaration public float U { get; set; } Property Value Type Description Single | Improve this Doc View Source V Declaration public float V { get; set; } Property Value Type Description Single Methods | Improve this Doc View Source Equals(TextureCoordinates) Determines whether the specified object is equal to the current object. Declaration public bool Equals(TextureCoordinates other) Parameters Type Name Description TextureCoordinates other The object to compare with the current object. Returns Type Description Boolean true if the specified object is equal to the current object; otherwise, false . | Improve this Doc View Source Equals(Object) Determines whether the specified object is equal to the current object. Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj The object to compare with the current object. Returns Type Description Boolean true if the specified object is equal to the current object; otherwise, false . Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Returns the hash code for this instance. Declaration public override int GetHashCode() Returns Type Description Int32 A 32-bit signed integer that is the hash code for this instance. Overrides ValueType.GetHashCode() | Improve this Doc View Source Parse(String) Declaration public static TextureCoordinates Parse(string value) Parameters Type Name Description String value Returns Type Description TextureCoordinates | Improve this Doc View Source SetU(Single) Declaration public TextureCoordinates SetU(float value) Parameters Type Name Description Single value Returns Type Description TextureCoordinates | Improve this Doc View Source SetV(Single) Declaration public TextureCoordinates SetV(float value) Parameters Type Name Description Single value Returns Type Description TextureCoordinates | Improve this Doc View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description String A string that represents the current object. Overrides ValueType.ToString() Operators | Improve this Doc View Source Equality(TextureCoordinates, TextureCoordinates) Compares two TextureCoordinates objects. The result specifies whether the values of the two objects are equal. Declaration public static bool operator ==(TextureCoordinates left, TextureCoordinates right) Parameters Type Name Description TextureCoordinates left The left TextureCoordinates to compare. TextureCoordinates right The right TextureCoordinates to compare. Returns Type Description Boolean true if the values of left and right are equal; otherwise, false . | Improve this Doc View Source Inequality(TextureCoordinates, TextureCoordinates) Compares two TextureCoordinates objects. The result specifies whether the values of the two objects are unequal. Declaration public static bool operator !=(TextureCoordinates left, TextureCoordinates right) Parameters Type Name Description TextureCoordinates left The left TextureCoordinates to compare. TextureCoordinates right The right TextureCoordinates to compare. Returns Type Description Boolean true if the values of left and right differ; otherwise, false . Implements System.IEquatable<T>"
  },
  "api/JeremyAnsel.Xwa.Opt.Texture.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Texture.html",
    "title": "Class Texture",
    "keywords": "Class Texture Inheritance Object Texture Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : JeremyAnsel.Xwa.Opt Assembly : JeremyAnsel.Xwa.Opt.dll Syntax public class Texture Constructors | Improve this Doc View Source Texture() Declaration public Texture() Properties | Improve this Doc View Source AlphaIllumData Declaration public byte[] AlphaIllumData { get; set; } Property Value Type Description Byte [] | Improve this Doc View Source BitsPerPixel Declaration public int BitsPerPixel { get; } Property Value Type Description Int32 | Improve this Doc View Source HasAlpha Declaration public bool HasAlpha { get; } Property Value Type Description Boolean | Improve this Doc View Source Height Declaration public int Height { get; set; } Property Value Type Description Int32 | Improve this Doc View Source ImageData Declaration public byte[] ImageData { get; set; } Property Value Type Description Byte [] | Improve this Doc View Source IsIlluminated Declaration public bool IsIlluminated { get; } Property Value Type Description Boolean | Improve this Doc View Source MaximumMipmapsCount Declaration public int MaximumMipmapsCount { get; } Property Value Type Description Int32 | Improve this Doc View Source MaximumMipmapsLength Declaration public int MaximumMipmapsLength { get; } Property Value Type Description Int32 | Improve this Doc View Source MipmapsCount Declaration public int MipmapsCount { get; } Property Value Type Description Int32 | Improve this Doc View Source MipmapsLength Declaration public int MipmapsLength { get; } Property Value Type Description Int32 | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source Palette Declaration public byte[] Palette { get; set; } Property Value Type Description Byte [] | Improve this Doc View Source Width Declaration public int Width { get; set; } Property Value Type Description Int32 Methods | Improve this Doc View Source AreEquals(Texture, Texture) Declaration public static bool AreEquals(Texture textureA, Texture textureB) Parameters Type Name Description Texture textureA Texture textureB Returns Type Description Boolean | Improve this Doc View Source CanBeConvertedWithoutLoss() Declaration public bool CanBeConvertedWithoutLoss() Returns Type Description Boolean | Improve this Doc View Source Clone() Declaration public Texture Clone() Returns Type Description Texture | Improve this Doc View Source Convert32To8() Declaration public void Convert32To8() | Improve this Doc View Source Convert8To32() Declaration public void Convert8To32() | Improve this Doc View Source FromFile(String) Declaration public static Texture FromFile(string fileName) Parameters Type Name Description String fileName Returns Type Description Texture | Improve this Doc View Source FromFile(String, String) Declaration public static Texture FromFile(string fileName, string fileNameAlpha) Parameters Type Name Description String fileName String fileNameAlpha Returns Type Description Texture | Improve this Doc View Source FromFile(String, String, String) Declaration public static Texture FromFile(string fileName, string fileNameAlpha, string fileNameIllum) Parameters Type Name Description String fileName String fileNameAlpha String fileNameIllum Returns Type Description Texture | Improve this Doc View Source GenerateMipmaps() Declaration public void GenerateMipmaps() | Improve this Doc View Source GetAlphaMap() Declaration public byte[] GetAlphaMap() Returns Type Description Byte [] | Improve this Doc View Source GetAlphaMap(Int32, out Int32, out Int32) Declaration public byte[] GetAlphaMap(int level, out int width, out int height) Parameters Type Name Description Int32 level Int32 width Int32 height Returns Type Description Byte [] | Improve this Doc View Source GetColorMap() Declaration public byte[] GetColorMap() Returns Type Description Byte [] | Improve this Doc View Source GetColorMap(Int32, out Int32, out Int32) Declaration public byte[] GetColorMap(int level, out int width, out int height) Parameters Type Name Description Int32 level Int32 width Int32 height Returns Type Description Byte [] | Improve this Doc View Source GetIllumMap() Declaration public byte[] GetIllumMap() Returns Type Description Byte [] | Improve this Doc View Source GetIllumMap(Int32, out Int32, out Int32) Declaration public byte[] GetIllumMap(int level, out int width, out int height) Parameters Type Name Description Int32 level Int32 width Int32 height Returns Type Description Byte [] | Improve this Doc View Source GetMipmapAlphaData() Declaration public byte[] GetMipmapAlphaData() Returns Type Description Byte [] | Improve this Doc View Source GetMipmapAlphaData(Int32, out Int32, out Int32) Declaration public byte[] GetMipmapAlphaData(int level, out int width, out int height) Parameters Type Name Description Int32 level Int32 width Int32 height Returns Type Description Byte [] | Improve this Doc View Source GetMipmapIllumData() Declaration public byte[] GetMipmapIllumData() Returns Type Description Byte [] | Improve this Doc View Source GetMipmapIllumData(Int32, out Int32, out Int32) Declaration public byte[] GetMipmapIllumData(int level, out int width, out int height) Parameters Type Name Description Int32 level Int32 width Int32 height Returns Type Description Byte [] | Improve this Doc View Source GetMipmapImageData() Declaration public byte[] GetMipmapImageData() Returns Type Description Byte [] | Improve this Doc View Source GetMipmapImageData(Int32, out Int32, out Int32) Declaration public byte[] GetMipmapImageData(int level, out int width, out int height) Parameters Type Name Description Int32 level Int32 width Int32 height Returns Type Description Byte [] | Improve this Doc View Source MakeColor8bppIlluminated(Int32) Declaration public void MakeColor8bppIlluminated(int c) Parameters Type Name Description Int32 c | Improve this Doc View Source MakeColorIlluminated(Byte, Byte, Byte) Declaration public void MakeColorIlluminated(byte red, byte green, byte blue) Parameters Type Name Description Byte red Byte green Byte blue | Improve this Doc View Source MakeColorIlluminated(Byte, Byte, Byte, Byte, Byte, Byte) Declaration public void MakeColorIlluminated(byte red0, byte green0, byte blue0, byte red1, byte green1, byte blue1) Parameters Type Name Description Byte red0 Byte green0 Byte blue0 Byte red1 Byte green1 Byte blue1 | Improve this Doc View Source RemoveMipmaps() Declaration public void RemoveMipmaps() | Improve this Doc View Source RemoveUnusedColors() Declaration public int RemoveUnusedColors() Returns Type Description Int32 | Improve this Doc View Source ResetPaletteColors() Declaration public void ResetPaletteColors() | Improve this Doc View Source Save(String) Declaration public void Save(string fileName) Parameters Type Name Description String fileName | Improve this Doc View Source Save(String, Int32) Declaration public void Save(string fileName, int level) Parameters Type Name Description String fileName Int32 level | Improve this Doc View Source SaveAlphaMap(String) Declaration public void SaveAlphaMap(string fileName) Parameters Type Name Description String fileName | Improve this Doc View Source SaveAlphaMap(String, Int32) Declaration public void SaveAlphaMap(string fileName, int level) Parameters Type Name Description String fileName Int32 level | Improve this Doc View Source SaveColorMap(String) Declaration public void SaveColorMap(string fileName) Parameters Type Name Description String fileName | Improve this Doc View Source SaveColorMap(String, Int32) Declaration public void SaveColorMap(string fileName, int level) Parameters Type Name Description String fileName Int32 level | Improve this Doc View Source SaveIllumMap(String) Declaration public void SaveIllumMap(string fileName) Parameters Type Name Description String fileName | Improve this Doc View Source SaveIllumMap(String, Int32) Declaration public void SaveIllumMap(string fileName, int level) Parameters Type Name Description String fileName Int32 level | Improve this Doc View Source SetAlphaMap(String) Declaration public void SetAlphaMap(string fileName) Parameters Type Name Description String fileName | Improve this Doc View Source SetIllumMap(String) Declaration public void SetIllumMap(string fileName) Parameters Type Name Description String fileName | Improve this Doc View Source SetPaletteColors(Byte[]) Declaration public void SetPaletteColors(byte[] colors) Parameters Type Name Description Byte [] colors"
  },
  "api/JeremyAnsel.Xwa.Opt.Nodes.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Nodes.html",
    "title": "Namespace JeremyAnsel.Xwa.Opt.Nodes",
    "keywords": "Namespace JeremyAnsel.Xwa.Opt.Nodes Classes EngineGlowNode FaceDataNode FaceDataNodeData FaceGroupingNode HardpointNode MeshDescriptorNode MeshVerticesNode Node NodeGroupNode NodeReferenceNode NodeSwitchNode OptFileNodes RotationScaleNode TextureAlphaNode TextureCoordinatesNode TextureNode VertexNormalsNode"
  },
  "api/JeremyAnsel.Xwa.Opt.Nodes.VertexNormalsNode.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Nodes.VertexNormalsNode.html",
    "title": "Class VertexNormalsNode",
    "keywords": "Class VertexNormalsNode Inheritance Object Node VertexNormalsNode Inherited Members Node.Null Node.Offset Node.NodeType Node.Name Node.Nodes Node.Parameter1 Node.Parameter2 Node.SizeInFile Node.NameSize Node.NodesOffsetsSize Node.NodesSize Node.WriteName(BinaryWriter) Node.WriteNodesOffsets(BinaryWriter, Int32) Node.WriteNodes(BinaryWriter, Int32) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : JeremyAnsel.Xwa.Opt.Nodes Assembly : JeremyAnsel.Xwa.Opt.dll Syntax public sealed class VertexNormalsNode : Node Constructors | Improve this Doc View Source VertexNormalsNode() Declaration public VertexNormalsNode() Properties | Improve this Doc View Source DataSize Declaration protected override int DataSize { get; } Property Value Type Description Int32 Overrides Node.DataSize | Improve this Doc View Source Normals Declaration public IList<Vector> Normals { get; } Property Value Type Description IList < Vector > Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Node.ToString()"
  },
  "api/JeremyAnsel.Xwa.Opt.Nodes.NodeReferenceNode.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Nodes.NodeReferenceNode.html",
    "title": "Class NodeReferenceNode",
    "keywords": "Class NodeReferenceNode Inheritance Object Node NodeReferenceNode Inherited Members Node.Null Node.Offset Node.NodeType Node.Name Node.Nodes Node.Parameter1 Node.Parameter2 Node.SizeInFile Node.NameSize Node.NodesOffsetsSize Node.NodesSize Node.WriteName(BinaryWriter) Node.WriteNodesOffsets(BinaryWriter, Int32) Node.WriteNodes(BinaryWriter, Int32) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : JeremyAnsel.Xwa.Opt.Nodes Assembly : JeremyAnsel.Xwa.Opt.dll Syntax public sealed class NodeReferenceNode : Node Constructors | Improve this Doc View Source NodeReferenceNode() Declaration public NodeReferenceNode() Properties | Improve this Doc View Source DataSize Declaration protected override int DataSize { get; } Property Value Type Description Int32 Overrides Node.DataSize | Improve this Doc View Source Reference Declaration public string Reference { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Node.ToString()"
  },
  "api/JeremyAnsel.Xwa.Opt.Nodes.NodeGroupNode.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Nodes.NodeGroupNode.html",
    "title": "Class NodeGroupNode",
    "keywords": "Class NodeGroupNode Inheritance Object Node NodeGroupNode Inherited Members Node.Null Node.Offset Node.NodeType Node.Name Node.Nodes Node.Parameter1 Node.Parameter2 Node.SizeInFile Node.NameSize Node.NodesOffsetsSize Node.DataSize Node.NodesSize Node.ToString() Node.WriteName(BinaryWriter) Node.WriteNodesOffsets(BinaryWriter, Int32) Node.WriteNodes(BinaryWriter, Int32) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : JeremyAnsel.Xwa.Opt.Nodes Assembly : JeremyAnsel.Xwa.Opt.dll Syntax public sealed class NodeGroupNode : Node Constructors | Improve this Doc View Source NodeGroupNode() Declaration public NodeGroupNode()"
  },
  "api/JeremyAnsel.Xwa.Opt.Nodes.HardpointNode.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Nodes.HardpointNode.html",
    "title": "Class HardpointNode",
    "keywords": "Class HardpointNode Inheritance Object Node HardpointNode Inherited Members Node.Null Node.Offset Node.NodeType Node.Name Node.Nodes Node.Parameter1 Node.Parameter2 Node.SizeInFile Node.NameSize Node.NodesOffsetsSize Node.NodesSize Node.WriteName(BinaryWriter) Node.WriteNodesOffsets(BinaryWriter, Int32) Node.WriteNodes(BinaryWriter, Int32) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : JeremyAnsel.Xwa.Opt.Nodes Assembly : JeremyAnsel.Xwa.Opt.dll Syntax public sealed class HardpointNode : Node Constructors | Improve this Doc View Source HardpointNode() Declaration public HardpointNode() Properties | Improve this Doc View Source DataSize Declaration protected override int DataSize { get; } Property Value Type Description Int32 Overrides Node.DataSize | Improve this Doc View Source HardpointType Declaration public HardpointType HardpointType { get; set; } Property Value Type Description HardpointType | Improve this Doc View Source Position Declaration public Vector Position { get; set; } Property Value Type Description Vector Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Node.ToString()"
  },
  "api/JeremyAnsel.Xwa.Opt.Nodes.FaceGroupingNode.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Nodes.FaceGroupingNode.html",
    "title": "Class FaceGroupingNode",
    "keywords": "Class FaceGroupingNode Inheritance Object Node FaceGroupingNode Inherited Members Node.Null Node.Offset Node.NodeType Node.Name Node.Nodes Node.Parameter1 Node.Parameter2 Node.SizeInFile Node.NameSize Node.NodesOffsetsSize Node.NodesSize Node.ToString() Node.WriteName(BinaryWriter) Node.WriteNodesOffsets(BinaryWriter, Int32) Node.WriteNodes(BinaryWriter, Int32) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : JeremyAnsel.Xwa.Opt.Nodes Assembly : JeremyAnsel.Xwa.Opt.dll Syntax public sealed class FaceGroupingNode : Node Constructors | Improve this Doc View Source FaceGroupingNode() Declaration public FaceGroupingNode() Properties | Improve this Doc View Source DataSize Declaration protected override int DataSize { get; } Property Value Type Description Int32 Overrides Node.DataSize | Improve this Doc View Source Distances Declaration public IList<float> Distances { get; } Property Value Type Description IList < Single >"
  },
  "api/JeremyAnsel.Xwa.Opt.MeshDescriptor.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.MeshDescriptor.html",
    "title": "Class MeshDescriptor",
    "keywords": "Class MeshDescriptor Inheritance Object MeshDescriptor Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : JeremyAnsel.Xwa.Opt Assembly : JeremyAnsel.Xwa.Opt.dll Syntax public class MeshDescriptor Constructors | Improve this Doc View Source MeshDescriptor() Declaration public MeshDescriptor() Properties | Improve this Doc View Source Center Declaration public Vector Center { get; set; } Property Value Type Description Vector | Improve this Doc View Source ExplosionType Declaration public ExplosionTypes ExplosionType { get; set; } Property Value Type Description ExplosionTypes | Improve this Doc View Source Max Declaration public Vector Max { get; set; } Property Value Type Description Vector | Improve this Doc View Source MeshType Declaration public MeshType MeshType { get; set; } Property Value Type Description MeshType | Improve this Doc View Source Min Declaration public Vector Min { get; set; } Property Value Type Description Vector | Improve this Doc View Source Span Declaration public Vector Span { get; set; } Property Value Type Description Vector | Improve this Doc View Source Target Declaration public Vector Target { get; set; } Property Value Type Description Vector | Improve this Doc View Source TargetId Declaration public int TargetId { get; set; } Property Value Type Description Int32 Methods | Improve this Doc View Source Clone() Declaration public MeshDescriptor Clone() Returns Type Description MeshDescriptor"
  },
  "api/JeremyAnsel.Xwa.Opt.HardpointType.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.HardpointType.html",
    "title": "Enum HardpointType",
    "keywords": "Enum HardpointType Namespace : JeremyAnsel.Xwa.Opt Assembly : JeremyAnsel.Xwa.Opt.dll Syntax public enum HardpointType Fields Name Description AccEnd AccStart Cockpit CockpitSparks Custom1 Custom2 Custom3 Custom4 Custom5 Custom6 DockFromBig DockFromSmall DockingPoint DockToBig DockToSmall DumbBomb EmpireLaser EngineGlow FiredBomb Gunner InsideHangar IonCannon JammingPoint MagPulse Missile None OutsideHangar RebelLaser SuperEmpireLaser SuperIonCannon SuperMagPulse SuperMissile SuperRebelLaser SuperTorpedo Torpedo Towing TurboEmpireLaser TurboIonCannon TurboMagPulse TurboRebelLaser"
  },
  "api/JeremyAnsel.Xwa.Opt.EngineGlow.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.EngineGlow.html",
    "title": "Class EngineGlow",
    "keywords": "Class EngineGlow Inheritance Object EngineGlow Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : JeremyAnsel.Xwa.Opt Assembly : JeremyAnsel.Xwa.Opt.dll Syntax public class EngineGlow Constructors | Improve this Doc View Source EngineGlow() Declaration public EngineGlow() Properties | Improve this Doc View Source CoreColor Declaration public uint CoreColor { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source Format Declaration public Vector Format { get; set; } Property Value Type Description Vector | Improve this Doc View Source IsDisabled Declaration public bool IsDisabled { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Look Declaration public Vector Look { get; set; } Property Value Type Description Vector | Improve this Doc View Source OuterColor Declaration public uint OuterColor { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source Position Declaration public Vector Position { get; set; } Property Value Type Description Vector | Improve this Doc View Source Right Declaration public Vector Right { get; set; } Property Value Type Description Vector | Improve this Doc View Source Up Declaration public Vector Up { get; set; } Property Value Type Description Vector Methods | Improve this Doc View Source Clone() Declaration public EngineGlow Clone() Returns Type Description EngineGlow"
  },
  "index.html": {
    "href": "index.html",
    "title": "JeremyAnsel.Xwa.Opt",
    "keywords": "JeremyAnsel.Xwa.Opt JeremyAnsel.Xwa.Opt is a .Net library to handle X-Wing Alliance's OPT files."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "JeremyAnsel.Xwa.Opt",
    "keywords": "JeremyAnsel.Xwa.Opt This is the documentation for JeremyAnsel.Xwa.Opt."
  },
  "api/JeremyAnsel.Xwa.Opt.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.html",
    "title": "Namespace JeremyAnsel.Xwa.Opt",
    "keywords": "Namespace JeremyAnsel.Xwa.Opt Classes EngineGlow Face FaceGroup Hardpoint Mesh MeshDescriptor MeshLod OptFile PlayabilityChecker PlayabilityMessage RotationScale Texture Structs Indices TextureCoordinates Vector Enums ExplosionTypes HardpointType MeshType NodeType PlayabilityMessageLevel"
  },
  "api/JeremyAnsel.Xwa.Opt.NodeType.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.NodeType.html",
    "title": "Enum NodeType",
    "keywords": "Enum NodeType Namespace : JeremyAnsel.Xwa.Opt Assembly : JeremyAnsel.Xwa.Opt.dll Syntax public enum NodeType Fields Name Description EngineGlow FaceData FaceGrouping Hardpoint MeshDescriptor MeshVertices NodeGroup NodeReference NodeSwitch NullNode RotationScale Texture TextureAlpha TextureCoordinates VertexNormals"
  },
  "api/JeremyAnsel.Xwa.Opt.Nodes.TextureNode.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Nodes.TextureNode.html",
    "title": "Class TextureNode",
    "keywords": "Class TextureNode Inheritance Object Node TextureNode Inherited Members Node.Null Node.Offset Node.NodeType Node.Name Node.Nodes Node.Parameter1 Node.Parameter2 Node.SizeInFile Node.NameSize Node.NodesOffsetsSize Node.NodesSize Node.WriteName(BinaryWriter) Node.WriteNodesOffsets(BinaryWriter, Int32) Node.WriteNodes(BinaryWriter, Int32) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : JeremyAnsel.Xwa.Opt.Nodes Assembly : JeremyAnsel.Xwa.Opt.dll Syntax public sealed class TextureNode : Node Constructors | Improve this Doc View Source TextureNode() Declaration public TextureNode() Properties | Improve this Doc View Source Bytes Declaration public byte[] Bytes { get; set; } Property Value Type Description Byte [] | Improve this Doc View Source DataSize Declaration protected override int DataSize { get; } Property Value Type Description Int32 Overrides Node.DataSize | Improve this Doc View Source Height Declaration public int Height { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Palettes Declaration public byte[] Palettes { get; set; } Property Value Type Description Byte [] | Improve this Doc View Source UniqueId Declaration public int UniqueId { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Width Declaration public int Width { get; set; } Property Value Type Description Int32 Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Node.ToString()"
  },
  "api/JeremyAnsel.Xwa.Opt.Nodes.TextureCoordinatesNode.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Nodes.TextureCoordinatesNode.html",
    "title": "Class TextureCoordinatesNode",
    "keywords": "Class TextureCoordinatesNode Inheritance Object Node TextureCoordinatesNode Inherited Members Node.Null Node.Offset Node.NodeType Node.Name Node.Nodes Node.Parameter1 Node.Parameter2 Node.SizeInFile Node.NameSize Node.NodesOffsetsSize Node.NodesSize Node.WriteName(BinaryWriter) Node.WriteNodesOffsets(BinaryWriter, Int32) Node.WriteNodes(BinaryWriter, Int32) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : JeremyAnsel.Xwa.Opt.Nodes Assembly : JeremyAnsel.Xwa.Opt.dll Syntax public sealed class TextureCoordinatesNode : Node Constructors | Improve this Doc View Source TextureCoordinatesNode() Declaration public TextureCoordinatesNode() Properties | Improve this Doc View Source DataSize Declaration protected override int DataSize { get; } Property Value Type Description Int32 Overrides Node.DataSize | Improve this Doc View Source TextureVertices Declaration public IList<TextureCoordinates> TextureVertices { get; } Property Value Type Description IList < TextureCoordinates > Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Node.ToString()"
  },
  "api/JeremyAnsel.Xwa.Opt.Nodes.OptFileNodes.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Nodes.OptFileNodes.html",
    "title": "Class OptFileNodes",
    "keywords": "Class OptFileNodes Inheritance Object OptFileNodes Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : JeremyAnsel.Xwa.Opt.Nodes Assembly : JeremyAnsel.Xwa.Opt.dll Syntax public class OptFileNodes Constructors | Improve this Doc View Source OptFileNodes() Declaration public OptFileNodes() Properties | Improve this Doc View Source FileName Declaration public string FileName { get; } Property Value Type Description String | Improve this Doc View Source FileSize Declaration public int FileSize { get; } Property Value Type Description Int32 | Improve this Doc View Source Nodes Declaration public IList<Node> Nodes { get; } Property Value Type Description IList < Node > | Improve this Doc View Source Version Declaration public int Version { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source FromFile(String) Declaration public static OptFileNodes FromFile(string path) Parameters Type Name Description String path Returns Type Description OptFileNodes | Improve this Doc View Source Save(String) Declaration public void Save(string path) Parameters Type Name Description String path"
  },
  "api/JeremyAnsel.Xwa.Opt.Nodes.FaceDataNodeData.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Nodes.FaceDataNodeData.html",
    "title": "Class FaceDataNodeData",
    "keywords": "Class FaceDataNodeData Inheritance Object FaceDataNodeData Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : JeremyAnsel.Xwa.Opt.Nodes Assembly : JeremyAnsel.Xwa.Opt.dll Syntax public sealed class FaceDataNodeData Properties | Improve this Doc View Source EdgesIndex Declaration public Indices EdgesIndex { get; set; } Property Value Type Description Indices | Improve this Doc View Source Normal Declaration public Vector Normal { get; set; } Property Value Type Description Vector | Improve this Doc View Source TextureCoordinatesIndex Declaration public Indices TextureCoordinatesIndex { get; set; } Property Value Type Description Indices | Improve this Doc View Source TexturingDirection Declaration public Vector TexturingDirection { get; set; } Property Value Type Description Vector | Improve this Doc View Source TexturingMagniture Declaration public Vector TexturingMagniture { get; set; } Property Value Type Description Vector | Improve this Doc View Source VertexNormalsIndex Declaration public Indices VertexNormalsIndex { get; set; } Property Value Type Description Indices | Improve this Doc View Source VerticesIndex Declaration public Indices VerticesIndex { get; set; } Property Value Type Description Indices"
  },
  "api/JeremyAnsel.Xwa.Opt.Nodes.EngineGlowNode.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Nodes.EngineGlowNode.html",
    "title": "Class EngineGlowNode",
    "keywords": "Class EngineGlowNode Inheritance Object Node EngineGlowNode Inherited Members Node.Null Node.Offset Node.NodeType Node.Name Node.Nodes Node.Parameter1 Node.Parameter2 Node.SizeInFile Node.NameSize Node.NodesOffsetsSize Node.NodesSize Node.WriteName(BinaryWriter) Node.WriteNodesOffsets(BinaryWriter, Int32) Node.WriteNodes(BinaryWriter, Int32) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : JeremyAnsel.Xwa.Opt.Nodes Assembly : JeremyAnsel.Xwa.Opt.dll Syntax public sealed class EngineGlowNode : Node Constructors | Improve this Doc View Source EngineGlowNode() Declaration public EngineGlowNode() Properties | Improve this Doc View Source CoreColor Declaration public uint CoreColor { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source DataSize Declaration protected override int DataSize { get; } Property Value Type Description Int32 Overrides Node.DataSize | Improve this Doc View Source Format Declaration public Vector Format { get; set; } Property Value Type Description Vector | Improve this Doc View Source IsDisabled Declaration public bool IsDisabled { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Look Declaration public Vector Look { get; set; } Property Value Type Description Vector | Improve this Doc View Source OuterColor Declaration public uint OuterColor { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source Position Declaration public Vector Position { get; set; } Property Value Type Description Vector | Improve this Doc View Source Right Declaration public Vector Right { get; set; } Property Value Type Description Vector | Improve this Doc View Source Up Declaration public Vector Up { get; set; } Property Value Type Description Vector Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Node.ToString()"
  },
  "api/JeremyAnsel.Xwa.Opt.MeshLod.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.MeshLod.html",
    "title": "Class MeshLod",
    "keywords": "Class MeshLod Inheritance Object MeshLod Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : JeremyAnsel.Xwa.Opt Assembly : JeremyAnsel.Xwa.Opt.dll Syntax public class MeshLod Constructors | Improve this Doc View Source MeshLod() Declaration public MeshLod() Properties | Improve this Doc View Source Distance Declaration public float Distance { get; set; } Property Value Type Description Single | Improve this Doc View Source FaceGroups Declaration public IList<FaceGroup> FaceGroups { get; } Property Value Type Description IList < FaceGroup > | Improve this Doc View Source TrianglesCount Declaration public int TrianglesCount { get; } Property Value Type Description Int32 | Improve this Doc View Source VerticesCount Declaration public int VerticesCount { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Clone() Declaration public MeshLod Clone() Returns Type Description MeshLod | Improve this Doc View Source CompactFaceGroups() Declaration public void CompactFaceGroups()"
  },
  "api/JeremyAnsel.Xwa.Opt.Indices.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Indices.html",
    "title": "Struct Indices",
    "keywords": "Struct Indices Implements IEquatable < Indices > Inherited Members Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : JeremyAnsel.Xwa.Opt Assembly : JeremyAnsel.Xwa.Opt.dll Syntax public struct Indices : IEquatable<Indices> Constructors | Improve this Doc View Source Indices(Int32, Int32, Int32) Declaration public Indices(int a, int b, int c) Parameters Type Name Description Int32 a Int32 b Int32 c | Improve this Doc View Source Indices(Int32, Int32, Int32, Int32) Declaration public Indices(int a, int b, int c, int d) Parameters Type Name Description Int32 a Int32 b Int32 c Int32 d Fields | Improve this Doc View Source Empty Declaration public static readonly Indices Empty Field Value Type Description Indices Properties | Improve this Doc View Source A Declaration public int A { get; set; } Property Value Type Description Int32 | Improve this Doc View Source B Declaration public int B { get; set; } Property Value Type Description Int32 | Improve this Doc View Source C Declaration public int C { get; set; } Property Value Type Description Int32 | Improve this Doc View Source D Declaration public int D { get; set; } Property Value Type Description Int32 | Improve this Doc View Source IsQuadrangle Declaration public bool IsQuadrangle { get; } Property Value Type Description Boolean | Improve this Doc View Source IsTriangle Declaration public bool IsTriangle { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source Equals(Indices) Determines whether the specified object is equal to the current object. Declaration public bool Equals(Indices other) Parameters Type Name Description Indices other The object to compare with the current object. Returns Type Description Boolean true if the specified object is equal to the current object; otherwise, false . | Improve this Doc View Source Equals(Object) Determines whether the specified object is equal to the current object. Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj The object to compare with the current object. Returns Type Description Boolean true if the specified object is equal to the current object; otherwise, false . Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Returns the hash code for this instance. Declaration public override int GetHashCode() Returns Type Description Int32 A 32-bit signed integer that is the hash code for this instance. Overrides ValueType.GetHashCode() | Improve this Doc View Source InvertOrder() Declaration public Indices InvertOrder() Returns Type Description Indices | Improve this Doc View Source Parse(String) Declaration public static Indices Parse(string value) Parameters Type Name Description String value Returns Type Description Indices | Improve this Doc View Source SetA(Int32) Declaration public Indices SetA(int value) Parameters Type Name Description Int32 value Returns Type Description Indices | Improve this Doc View Source SetB(Int32) Declaration public Indices SetB(int value) Parameters Type Name Description Int32 value Returns Type Description Indices | Improve this Doc View Source SetC(Int32) Declaration public Indices SetC(int value) Parameters Type Name Description Int32 value Returns Type Description Indices | Improve this Doc View Source SetD(Int32) Declaration public Indices SetD(int value) Parameters Type Name Description Int32 value Returns Type Description Indices | Improve this Doc View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description String A string that represents the current object. Overrides ValueType.ToString() Operators | Improve this Doc View Source Equality(Indices, Indices) Compares two Indices objects. The result specifies whether the values of the two objects are equal. Declaration public static bool operator ==(Indices left, Indices right) Parameters Type Name Description Indices left The left Indices to compare. Indices right The right Indices to compare. Returns Type Description Boolean true if the values of left and right are equal; otherwise, false . | Improve this Doc View Source Inequality(Indices, Indices) Compares two Indices objects. The result specifies whether the values of the two objects are unequal. Declaration public static bool operator !=(Indices left, Indices right) Parameters Type Name Description Indices left The left Indices to compare. Indices right The right Indices to compare. Returns Type Description Boolean true if the values of left and right differ; otherwise, false . Implements System.IEquatable<T>"
  },
  "api/JeremyAnsel.Xwa.Opt.PlayabilityMessage.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.PlayabilityMessage.html",
    "title": "Class PlayabilityMessage",
    "keywords": "Class PlayabilityMessage Inheritance Object PlayabilityMessage Implements IEquatable < PlayabilityMessage > IComparable IComparable < PlayabilityMessage > Inherited Members Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : JeremyAnsel.Xwa.Opt Assembly : JeremyAnsel.Xwa.Opt.dll Syntax public class PlayabilityMessage : IEquatable<PlayabilityMessage>, IComparable, IComparable<PlayabilityMessage> Constructors | Improve this Doc View Source PlayabilityMessage(PlayabilityMessageLevel, String, String, Object[]) Declaration public PlayabilityMessage(PlayabilityMessageLevel level, string category, string format, params object[] args) Parameters Type Name Description PlayabilityMessageLevel level String category String format Object [] args Properties | Improve this Doc View Source Category Declaration public string Category { get; } Property Value Type Description String | Improve this Doc View Source Level Declaration public PlayabilityMessageLevel Level { get; } Property Value Type Description PlayabilityMessageLevel | Improve this Doc View Source Message Declaration public string Message { get; } Property Value Type Description String Methods | Improve this Doc View Source Compare(PlayabilityMessage, PlayabilityMessage) Declaration public static int Compare(PlayabilityMessage left, PlayabilityMessage right) Parameters Type Name Description PlayabilityMessage left PlayabilityMessage right Returns Type Description Int32 | Improve this Doc View Source CompareTo(PlayabilityMessage) Declaration public int CompareTo(PlayabilityMessage other) Parameters Type Name Description PlayabilityMessage other Returns Type Description Int32 | Improve this Doc View Source CompareTo(Object) Declaration public int CompareTo(object obj) Parameters Type Name Description Object obj Returns Type Description Int32 | Improve this Doc View Source Equals(PlayabilityMessage) Declaration public bool Equals(PlayabilityMessage other) Parameters Type Name Description PlayabilityMessage other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Operators | Improve this Doc View Source Equality(PlayabilityMessage, PlayabilityMessage) Declaration public static bool operator ==(PlayabilityMessage left, PlayabilityMessage right) Parameters Type Name Description PlayabilityMessage left PlayabilityMessage right Returns Type Description Boolean | Improve this Doc View Source GreaterThan(PlayabilityMessage, PlayabilityMessage) Declaration public static bool operator>(PlayabilityMessage left, PlayabilityMessage right) Parameters Type Name Description PlayabilityMessage left PlayabilityMessage right Returns Type Description Boolean | Improve this Doc View Source GreaterThanOrEqual(PlayabilityMessage, PlayabilityMessage) Declaration public static bool operator >=(PlayabilityMessage left, PlayabilityMessage right) Parameters Type Name Description PlayabilityMessage left PlayabilityMessage right Returns Type Description Boolean | Improve this Doc View Source Inequality(PlayabilityMessage, PlayabilityMessage) Declaration public static bool operator !=(PlayabilityMessage left, PlayabilityMessage right) Parameters Type Name Description PlayabilityMessage left PlayabilityMessage right Returns Type Description Boolean | Improve this Doc View Source LessThan(PlayabilityMessage, PlayabilityMessage) Declaration public static bool operator <(PlayabilityMessage left, PlayabilityMessage right) Parameters Type Name Description PlayabilityMessage left PlayabilityMessage right Returns Type Description Boolean | Improve this Doc View Source LessThanOrEqual(PlayabilityMessage, PlayabilityMessage) Declaration public static bool operator <=(PlayabilityMessage left, PlayabilityMessage right) Parameters Type Name Description PlayabilityMessage left PlayabilityMessage right Returns Type Description Boolean Implements System.IEquatable<T> System.IComparable System.IComparable<T>"
  },
  "api/JeremyAnsel.Xwa.Opt.PlayabilityChecker.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.PlayabilityChecker.html",
    "title": "Class PlayabilityChecker",
    "keywords": "Class PlayabilityChecker Inheritance Object PlayabilityChecker Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : JeremyAnsel.Xwa.Opt Assembly : JeremyAnsel.Xwa.Opt.dll Syntax public static class PlayabilityChecker Methods | Improve this Doc View Source CheckEngineGlows(OptFile) Declaration public static IEnumerable<PlayabilityMessage> CheckEngineGlows(OptFile opt) Parameters Type Name Description OptFile opt Returns Type Description IEnumerable < PlayabilityMessage > | Improve this Doc View Source CheckFlatTextures(OptFile) Declaration public static IEnumerable<PlayabilityMessage> CheckFlatTextures(OptFile opt) Parameters Type Name Description OptFile opt Returns Type Description IEnumerable < PlayabilityMessage > | Improve this Doc View Source CheckGeometry(OptFile) Declaration public static IEnumerable<PlayabilityMessage> CheckGeometry(OptFile opt) Parameters Type Name Description OptFile opt Returns Type Description IEnumerable < PlayabilityMessage > | Improve this Doc View Source CheckHardpoints(OptFile) Declaration public static IEnumerable<PlayabilityMessage> CheckHardpoints(OptFile opt) Parameters Type Name Description OptFile opt Returns Type Description IEnumerable < PlayabilityMessage > | Improve this Doc View Source CheckPlayability(OptFile) Declaration public static IList<PlayabilityMessage> CheckPlayability(OptFile opt) Parameters Type Name Description OptFile opt Returns Type Description IList < PlayabilityMessage > | Improve this Doc View Source CheckTextures(OptFile) Declaration public static IEnumerable<PlayabilityMessage> CheckTextures(OptFile opt) Parameters Type Name Description OptFile opt Returns Type Description IEnumerable < PlayabilityMessage > | Improve this Doc View Source OptInformations(OptFile) Declaration public static IEnumerable<PlayabilityMessage> OptInformations(OptFile opt) Parameters Type Name Description OptFile opt Returns Type Description IEnumerable < PlayabilityMessage >"
  },
  "api/JeremyAnsel.Xwa.Opt.Nodes.TextureAlphaNode.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Nodes.TextureAlphaNode.html",
    "title": "Class TextureAlphaNode",
    "keywords": "Class TextureAlphaNode Inheritance Object Node TextureAlphaNode Inherited Members Node.Null Node.Offset Node.NodeType Node.Name Node.Nodes Node.Parameter1 Node.Parameter2 Node.SizeInFile Node.NameSize Node.NodesOffsetsSize Node.NodesSize Node.ToString() Node.WriteName(BinaryWriter) Node.WriteNodesOffsets(BinaryWriter, Int32) Node.WriteNodes(BinaryWriter, Int32) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : JeremyAnsel.Xwa.Opt.Nodes Assembly : JeremyAnsel.Xwa.Opt.dll Syntax public sealed class TextureAlphaNode : Node Constructors | Improve this Doc View Source TextureAlphaNode() Declaration public TextureAlphaNode() Properties | Improve this Doc View Source Bytes Declaration public byte[] Bytes { get; set; } Property Value Type Description Byte [] | Improve this Doc View Source DataSize Declaration protected override int DataSize { get; } Property Value Type Description Int32 Overrides Node.DataSize"
  },
  "api/JeremyAnsel.Xwa.Opt.Nodes.RotationScaleNode.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Nodes.RotationScaleNode.html",
    "title": "Class RotationScaleNode",
    "keywords": "Class RotationScaleNode Inheritance Object Node RotationScaleNode Inherited Members Node.Null Node.Offset Node.NodeType Node.Name Node.Nodes Node.Parameter1 Node.Parameter2 Node.SizeInFile Node.NameSize Node.NodesOffsetsSize Node.NodesSize Node.ToString() Node.WriteName(BinaryWriter) Node.WriteNodesOffsets(BinaryWriter, Int32) Node.WriteNodes(BinaryWriter, Int32) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : JeremyAnsel.Xwa.Opt.Nodes Assembly : JeremyAnsel.Xwa.Opt.dll Syntax public sealed class RotationScaleNode : Node Constructors | Improve this Doc View Source RotationScaleNode() Declaration public RotationScaleNode() Properties | Improve this Doc View Source DataSize Declaration protected override int DataSize { get; } Property Value Type Description Int32 Overrides Node.DataSize | Improve this Doc View Source Look Declaration public Vector Look { get; set; } Property Value Type Description Vector | Improve this Doc View Source Pivot Declaration public Vector Pivot { get; set; } Property Value Type Description Vector | Improve this Doc View Source Right Declaration public Vector Right { get; set; } Property Value Type Description Vector | Improve this Doc View Source Up Declaration public Vector Up { get; set; } Property Value Type Description Vector"
  },
  "api/JeremyAnsel.Xwa.Opt.Nodes.FaceDataNode.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Nodes.FaceDataNode.html",
    "title": "Class FaceDataNode",
    "keywords": "Class FaceDataNode Inheritance Object Node FaceDataNode Inherited Members Node.Null Node.Offset Node.NodeType Node.Name Node.Nodes Node.Parameter1 Node.Parameter2 Node.SizeInFile Node.NameSize Node.NodesOffsetsSize Node.NodesSize Node.WriteName(BinaryWriter) Node.WriteNodesOffsets(BinaryWriter, Int32) Node.WriteNodes(BinaryWriter, Int32) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : JeremyAnsel.Xwa.Opt.Nodes Assembly : JeremyAnsel.Xwa.Opt.dll Syntax public sealed class FaceDataNode : Node Constructors | Improve this Doc View Source FaceDataNode() Declaration public FaceDataNode() Properties | Improve this Doc View Source DataSize Declaration protected override int DataSize { get; } Property Value Type Description Int32 Overrides Node.DataSize | Improve this Doc View Source EdgesCount Declaration public int EdgesCount { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Faces Declaration public IList<FaceDataNodeData> Faces { get; } Property Value Type Description IList < FaceDataNodeData > Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Node.ToString()"
  },
  "api/JeremyAnsel.Xwa.Opt.MeshType.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.MeshType.html",
    "title": "Enum MeshType",
    "keywords": "Enum MeshType Namespace : JeremyAnsel.Xwa.Opt Assembly : JeremyAnsel.Xwa.Opt.dll Syntax public enum MeshType Fields Name Description Antenna BeamSystem Bridge CargoPod CommandSystem CommunicationSystem Custom Default DockingPlatform EnergyGenerator Engine Fuselage GunTurret Hangar Hatch LandingPlatform Launcher MainHull MiscHull PowerRegenerator Reactor RotaryBeamSystem RotaryCommandSystem RotaryCommunicationSystem RotaryGunTurret RotaryLauncher RotaryWing ShieldGenerator SmallGun WeaponSystem1 WeaponSystem2 Wing"
  },
  "api/JeremyAnsel.Xwa.Opt.Mesh.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Mesh.html",
    "title": "Class Mesh",
    "keywords": "Class Mesh Inheritance Object Mesh Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : JeremyAnsel.Xwa.Opt Assembly : JeremyAnsel.Xwa.Opt.dll Syntax public class Mesh Properties | Improve this Doc View Source Descriptor Declaration public MeshDescriptor Descriptor { get; set; } Property Value Type Description MeshDescriptor | Improve this Doc View Source EngineGlows Declaration public IList<EngineGlow> EngineGlows { get; } Property Value Type Description IList < EngineGlow > | Improve this Doc View Source Hardpoints Declaration public IList<Hardpoint> Hardpoints { get; } Property Value Type Description IList < Hardpoint > | Improve this Doc View Source Lods Declaration public IList<MeshLod> Lods { get; } Property Value Type Description IList < MeshLod > | Improve this Doc View Source RotationScale Declaration public RotationScale RotationScale { get; set; } Property Value Type Description RotationScale | Improve this Doc View Source TextureCoordinates Declaration public IList<TextureCoordinates> TextureCoordinates { get; } Property Value Type Description IList < TextureCoordinates > | Improve this Doc View Source VertexNormals Declaration public IList<Vector> VertexNormals { get; } Property Value Type Description IList < Vector > | Improve this Doc View Source Vertices Declaration public IList<Vector> Vertices { get; } Property Value Type Description IList < Vector > Methods | Improve this Doc View Source Clone() Declaration public Mesh Clone() Returns Type Description Mesh | Improve this Doc View Source CompactBuffers() Declaration public void CompactBuffers() | Improve this Doc View Source ComputeHitzone() Declaration public void ComputeHitzone() | Improve this Doc View Source Duplicate() Declaration public Mesh Duplicate() Returns Type Description Mesh | Improve this Doc View Source MergeLods(IEnumerable<MeshLod>) Declaration public MeshLod MergeLods(IEnumerable<MeshLod> lods) Parameters Type Name Description IEnumerable < MeshLod > lods Returns Type Description MeshLod | Improve this Doc View Source Move(Single, Single, Single) Declaration public void Move(float moveX, float moveY, float moveZ) Parameters Type Name Description Single moveX Single moveY Single moveZ | Improve this Doc View Source SortLods() Declaration public void SortLods() | Improve this Doc View Source SplitLod(MeshLod) Declaration public void SplitLod(MeshLod lod) Parameters Type Name Description MeshLod lod"
  },
  "api/JeremyAnsel.Xwa.Opt.FaceGroup.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.FaceGroup.html",
    "title": "Class FaceGroup",
    "keywords": "Class FaceGroup Inheritance Object FaceGroup Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : JeremyAnsel.Xwa.Opt Assembly : JeremyAnsel.Xwa.Opt.dll Syntax public class FaceGroup Properties | Improve this Doc View Source EdgesCount Declaration public int EdgesCount { get; } Property Value Type Description Int32 | Improve this Doc View Source Faces Declaration public IList<Face> Faces { get; } Property Value Type Description IList < Face > | Improve this Doc View Source Textures Declaration public IList<string> Textures { get; } Property Value Type Description IList < String > | Improve this Doc View Source TrianglesCount Declaration public int TrianglesCount { get; } Property Value Type Description Int32 | Improve this Doc View Source VerticesCount Declaration public int VerticesCount { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Clone() Declaration public FaceGroup Clone() Returns Type Description FaceGroup | Improve this Doc View Source ComputeEdges() Declaration public void ComputeEdges()"
  },
  "api/JeremyAnsel.Xwa.Opt.Face.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Face.html",
    "title": "Class Face",
    "keywords": "Class Face Inheritance Object Face Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : JeremyAnsel.Xwa.Opt Assembly : JeremyAnsel.Xwa.Opt.dll Syntax public class Face Constructors | Improve this Doc View Source Face() Declaration public Face() Properties | Improve this Doc View Source EdgesIndex Declaration public Indices EdgesIndex { get; set; } Property Value Type Description Indices | Improve this Doc View Source Normal Declaration public Vector Normal { get; set; } Property Value Type Description Vector | Improve this Doc View Source TextureCoordinatesIndex Declaration public Indices TextureCoordinatesIndex { get; set; } Property Value Type Description Indices | Improve this Doc View Source TexturingDirection Declaration public Vector TexturingDirection { get; set; } Property Value Type Description Vector | Improve this Doc View Source TexturingMagniture Declaration public Vector TexturingMagniture { get; set; } Property Value Type Description Vector | Improve this Doc View Source TrianglesCount Declaration public int TrianglesCount { get; } Property Value Type Description Int32 | Improve this Doc View Source VertexNormalsIndex Declaration public Indices VertexNormalsIndex { get; set; } Property Value Type Description Indices | Improve this Doc View Source VerticesCount Declaration public int VerticesCount { get; } Property Value Type Description Int32 | Improve this Doc View Source VerticesIndex Declaration public Indices VerticesIndex { get; set; } Property Value Type Description Indices Methods | Improve this Doc View Source Clone() Declaration public Face Clone() Returns Type Description Face"
  },
  "api/JeremyAnsel.Xwa.Opt.Vector.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Vector.html",
    "title": "Struct Vector",
    "keywords": "Struct Vector Implements IEquatable < Vector > Inherited Members Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : JeremyAnsel.Xwa.Opt Assembly : JeremyAnsel.Xwa.Opt.dll Syntax public struct Vector : IEquatable<Vector> Constructors | Improve this Doc View Source Vector(Single, Single, Single) Declaration public Vector(float x, float y, float z) Parameters Type Name Description Single x Single y Single z Fields | Improve this Doc View Source Empty Declaration public static readonly Vector Empty Field Value Type Description Vector Properties | Improve this Doc View Source X Declaration public float X { get; set; } Property Value Type Description Single | Improve this Doc View Source Y Declaration public float Y { get; set; } Property Value Type Description Single | Improve this Doc View Source Z Declaration public float Z { get; set; } Property Value Type Description Single Methods | Improve this Doc View Source Abs() Declaration public Vector Abs() Returns Type Description Vector | Improve this Doc View Source Equals(Vector) Determines whether the specified object is equal to the current object. Declaration public bool Equals(Vector other) Parameters Type Name Description Vector other The object to compare with the current object. Returns Type Description Boolean true if the specified object is equal to the current object; otherwise, false . | Improve this Doc View Source Equals(Object) Determines whether the specified object is equal to the current object. Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj The object to compare with the current object. Returns Type Description Boolean true if the specified object is equal to the current object; otherwise, false . Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Returns the hash code for this instance. Declaration public override int GetHashCode() Returns Type Description Int32 A 32-bit signed integer that is the hash code for this instance. Overrides ValueType.GetHashCode() | Improve this Doc View Source Move(Single, Single, Single) Declaration public Vector Move(float moveX, float moveY, float moveZ) Parameters Type Name Description Single moveX Single moveY Single moveZ Returns Type Description Vector | Improve this Doc View Source Normal(Vector, Vector, Vector) Declaration public static Vector Normal(Vector a, Vector b, Vector c) Parameters Type Name Description Vector a Vector b Vector c Returns Type Description Vector | Improve this Doc View Source Parse(String) Declaration public static Vector Parse(string value) Parameters Type Name Description String value Returns Type Description Vector | Improve this Doc View Source Scale(Single, Single, Single) Declaration public Vector Scale(float scaleX, float scaleY, float scaleZ) Parameters Type Name Description Single scaleX Single scaleY Single scaleZ Returns Type Description Vector | Improve this Doc View Source SetX(Single) Declaration public Vector SetX(float value) Parameters Type Name Description Single value Returns Type Description Vector | Improve this Doc View Source SetY(Single) Declaration public Vector SetY(float value) Parameters Type Name Description Single value Returns Type Description Vector | Improve this Doc View Source SetZ(Single) Declaration public Vector SetZ(float value) Parameters Type Name Description Single value Returns Type Description Vector | Improve this Doc View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description String A string that represents the current object. Overrides ValueType.ToString() Operators | Improve this Doc View Source Equality(Vector, Vector) Compares two Vector objects. The result specifies whether the values of the two objects are equal. Declaration public static bool operator ==(Vector left, Vector right) Parameters Type Name Description Vector left The left Vector to compare. Vector right The right Vector to compare. Returns Type Description Boolean true if the values of left and right are equal; otherwise, false . | Improve this Doc View Source Inequality(Vector, Vector) Compares two Vector objects. The result specifies whether the values of the two objects are unequal. Declaration public static bool operator !=(Vector left, Vector right) Parameters Type Name Description Vector left The left Vector to compare. Vector right The right Vector to compare. Returns Type Description Boolean true if the values of left and right differ; otherwise, false . Implements System.IEquatable<T>"
  }
}