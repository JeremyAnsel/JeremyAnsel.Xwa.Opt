{
  "api/JeremyAnsel.Xwa.Opt.EngineGlow.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.EngineGlow.html",
    "title": "Class EngineGlow",
    "keywords": "Class EngineGlow Inheritance object EngineGlow Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: JeremyAnsel.Xwa.Opt Assembly: JeremyAnsel.Xwa.Opt.dll Syntax public class EngineGlow Constructors | Edit this page View Source EngineGlow() Declaration public EngineGlow() Properties | Edit this page View Source CoreColor Declaration public uint CoreColor { get; set; } Property Value Type Description uint | Edit this page View Source Format Declaration public Vector Format { get; set; } Property Value Type Description Vector | Edit this page View Source IsDisabled Declaration public bool IsDisabled { get; set; } Property Value Type Description bool | Edit this page View Source Look Declaration public Vector Look { get; set; } Property Value Type Description Vector | Edit this page View Source OuterColor Declaration public uint OuterColor { get; set; } Property Value Type Description uint | Edit this page View Source Position Declaration public Vector Position { get; set; } Property Value Type Description Vector | Edit this page View Source Right Declaration public Vector Right { get; set; } Property Value Type Description Vector | Edit this page View Source Up Declaration public Vector Up { get; set; } Property Value Type Description Vector Methods | Edit this page View Source Clone() Declaration public EngineGlow Clone() Returns Type Description EngineGlow"
  },
  "api/JeremyAnsel.Xwa.Opt.ExplosionTypes.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.ExplosionTypes.html",
    "title": "Enum ExplosionTypes",
    "keywords": "Enum ExplosionTypes Namespace: JeremyAnsel.Xwa.Opt Assembly: JeremyAnsel.Xwa.Opt.dll Syntax [Flags] public enum ExplosionTypes Fields Name Description None Type1 Type2 Type3"
  },
  "api/JeremyAnsel.Xwa.Opt.Face.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Face.html",
    "title": "Class Face",
    "keywords": "Class Face Inheritance object Face Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: JeremyAnsel.Xwa.Opt Assembly: JeremyAnsel.Xwa.Opt.dll Syntax public sealed class Face Constructors | Edit this page View Source Face() Declaration public Face() Properties | Edit this page View Source EdgesIndex Declaration public Indices EdgesIndex { get; set; } Property Value Type Description Indices | Edit this page View Source Normal Declaration public Vector Normal { get; set; } Property Value Type Description Vector | Edit this page View Source TextureCoordinatesIndex Declaration public Indices TextureCoordinatesIndex { get; set; } Property Value Type Description Indices | Edit this page View Source TexturingDirection Declaration public Vector TexturingDirection { get; set; } Property Value Type Description Vector | Edit this page View Source TexturingMagniture Declaration public Vector TexturingMagniture { get; set; } Property Value Type Description Vector | Edit this page View Source TrianglesCount Declaration public int TrianglesCount { get; } Property Value Type Description int | Edit this page View Source VertexNormalsIndex Declaration public Indices VertexNormalsIndex { get; set; } Property Value Type Description Indices | Edit this page View Source VerticesCount Declaration public int VerticesCount { get; } Property Value Type Description int | Edit this page View Source VerticesIndex Declaration public Indices VerticesIndex { get; set; } Property Value Type Description Indices Methods | Edit this page View Source Clone() Declaration public Face Clone() Returns Type Description Face"
  },
  "api/JeremyAnsel.Xwa.Opt.FaceGroup.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.FaceGroup.html",
    "title": "Class FaceGroup",
    "keywords": "Class FaceGroup Inheritance object FaceGroup Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: JeremyAnsel.Xwa.Opt Assembly: JeremyAnsel.Xwa.Opt.dll Syntax public class FaceGroup Constructors | Edit this page View Source FaceGroup(bool) Declaration public FaceGroup(bool alloc = true) Parameters Type Name Description bool alloc Properties | Edit this page View Source EdgesCount Declaration public int EdgesCount { get; } Property Value Type Description int | Edit this page View Source Faces Declaration public IList<Face>? Faces { get; set; } Property Value Type Description IList<Face> | Edit this page View Source Textures Declaration public IList<string>? Textures { get; set; } Property Value Type Description IList<string> | Edit this page View Source TrianglesCount Declaration public int TrianglesCount { get; } Property Value Type Description int | Edit this page View Source VerticesCount Declaration public int VerticesCount { get; } Property Value Type Description int Methods | Edit this page View Source Clone() Declaration public FaceGroup Clone() Returns Type Description FaceGroup | Edit this page View Source ComputeEdges() Declaration public void ComputeEdges()"
  },
  "api/JeremyAnsel.Xwa.Opt.Hardpoint.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Hardpoint.html",
    "title": "Class Hardpoint",
    "keywords": "Class Hardpoint Inheritance object Hardpoint Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: JeremyAnsel.Xwa.Opt Assembly: JeremyAnsel.Xwa.Opt.dll Syntax public class Hardpoint Constructors | Edit this page View Source Hardpoint() Declaration public Hardpoint() Properties | Edit this page View Source HardpointType Declaration public HardpointType HardpointType { get; set; } Property Value Type Description HardpointType | Edit this page View Source Position Declaration public Vector Position { get; set; } Property Value Type Description Vector Methods | Edit this page View Source Clone() Declaration public Hardpoint Clone() Returns Type Description Hardpoint"
  },
  "api/JeremyAnsel.Xwa.Opt.HardpointType.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.HardpointType.html",
    "title": "Enum HardpointType",
    "keywords": "Enum HardpointType Namespace: JeremyAnsel.Xwa.Opt Assembly: JeremyAnsel.Xwa.Opt.dll Syntax public enum HardpointType Fields Name Description AccEnd AccStart Cockpit CockpitSparks Custom1 Custom2 Custom3 Custom4 Custom5 Custom6 DockFromBig DockFromSmall DockToBig DockToSmall DockingPoint DumbBomb EmpireLaser EngineGlow FiredBomb Gunner InsideHangar IonCannon JammingPoint MagPulse Missile None OutsideHangar RebelLaser SuperEmpireLaser SuperIonCannon SuperMagPulse SuperMissile SuperRebelLaser SuperTorpedo Torpedo Towing TurboEmpireLaser TurboIonCannon TurboMagPulse TurboRebelLaser"
  },
  "api/JeremyAnsel.Xwa.Opt.Indices.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Indices.html",
    "title": "Struct Indices",
    "keywords": "Struct Indices Implements IEquatable<Indices> Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: JeremyAnsel.Xwa.Opt Assembly: JeremyAnsel.Xwa.Opt.dll Syntax public struct Indices : IEquatable<Indices> Constructors | Edit this page View Source Indices(int, int, int) Declaration public Indices(int a, int b, int c) Parameters Type Name Description int a int b int c | Edit this page View Source Indices(int, int, int, int) Declaration public Indices(int a, int b, int c, int d) Parameters Type Name Description int a int b int c int d Fields | Edit this page View Source Empty Declaration public static readonly Indices Empty Field Value Type Description Indices Properties | Edit this page View Source A Declaration public int A { get; set; } Property Value Type Description int | Edit this page View Source B Declaration public int B { get; set; } Property Value Type Description int | Edit this page View Source C Declaration public int C { get; set; } Property Value Type Description int | Edit this page View Source D Declaration public int D { get; set; } Property Value Type Description int | Edit this page View Source IsQuadrangle Declaration public bool IsQuadrangle { get; } Property Value Type Description bool | Edit this page View Source IsTriangle Declaration public bool IsTriangle { get; } Property Value Type Description bool Methods | Edit this page View Source Equals(Indices) Determines whether the specified object is equal to the current object. Declaration public bool Equals(Indices other) Parameters Type Name Description Indices other The object to compare with the current object. Returns Type Description bool true if the specified object is equal to the current object; otherwise, false . | Edit this page View Source Equals(object?) Determines whether the specified object is equal to the current object. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with the current object. Returns Type Description bool true if the specified object is equal to the current object; otherwise, false . Overrides ValueType.Equals(object) | Edit this page View Source FromByteArray(byte[], int) Declaration public static Indices FromByteArray(byte[] buffer, int start) Parameters Type Name Description byte[] buffer int start Returns Type Description Indices | Edit this page View Source GetHashCode() Returns the hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A 32-bit signed integer that is the hash code for this instance. Overrides ValueType.GetHashCode() | Edit this page View Source InvertOrder() Declaration public Indices InvertOrder() Returns Type Description Indices | Edit this page View Source Parse(string) Declaration public static Indices Parse(string value) Parameters Type Name Description string value Returns Type Description Indices | Edit this page View Source Read(BinaryReader) Declaration public static Indices Read(BinaryReader file) Parameters Type Name Description BinaryReader file Returns Type Description Indices | Edit this page View Source SetA(int) Declaration public Indices SetA(int value) Parameters Type Name Description int value Returns Type Description Indices | Edit this page View Source SetB(int) Declaration public Indices SetB(int value) Parameters Type Name Description int value Returns Type Description Indices | Edit this page View Source SetC(int) Declaration public Indices SetC(int value) Parameters Type Name Description int value Returns Type Description Indices | Edit this page View Source SetD(int) Declaration public Indices SetD(int value) Parameters Type Name Description int value Returns Type Description Indices | Edit this page View Source ToByteArray() Declaration public byte[] ToByteArray() Returns Type Description byte[] | Edit this page View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides ValueType.ToString() | Edit this page View Source Write(BinaryWriter) Declaration public void Write(BinaryWriter file) Parameters Type Name Description BinaryWriter file Operators | Edit this page View Source operator ==(Indices, Indices) Compares two Indices objects. The result specifies whether the values of the two objects are equal. Declaration public static bool operator ==(Indices left, Indices right) Parameters Type Name Description Indices left The left Indices to compare. Indices right The right Indices to compare. Returns Type Description bool true if the values of left and right are equal; otherwise, false . | Edit this page View Source operator !=(Indices, Indices) Compares two Indices objects. The result specifies whether the values of the two objects are unequal. Declaration public static bool operator !=(Indices left, Indices right) Parameters Type Name Description Indices left The left Indices to compare. Indices right The right Indices to compare. Returns Type Description bool true if the values of left and right differ; otherwise, false . Implements IEquatable<T>"
  },
  "api/JeremyAnsel.Xwa.Opt.Mesh.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Mesh.html",
    "title": "Class Mesh",
    "keywords": "Class Mesh Inheritance object Mesh Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: JeremyAnsel.Xwa.Opt Assembly: JeremyAnsel.Xwa.Opt.dll Syntax public class Mesh Constructors | Edit this page View Source Mesh(bool) Declaration public Mesh(bool alloc = true) Parameters Type Name Description bool alloc Properties | Edit this page View Source Descriptor Declaration public MeshDescriptor? Descriptor { get; set; } Property Value Type Description MeshDescriptor | Edit this page View Source EngineGlows Declaration public IList<EngineGlow> EngineGlows { get; } Property Value Type Description IList<EngineGlow> | Edit this page View Source Hardpoints Declaration public IList<Hardpoint> Hardpoints { get; } Property Value Type Description IList<Hardpoint> | Edit this page View Source Lods Declaration public IList<MeshLod> Lods { get; } Property Value Type Description IList<MeshLod> | Edit this page View Source RotationScale Declaration public RotationScale? RotationScale { get; set; } Property Value Type Description RotationScale | Edit this page View Source TextureCoordinates Declaration public IList<TextureCoordinates>? TextureCoordinates { get; set; } Property Value Type Description IList<TextureCoordinates> | Edit this page View Source VertexNormals Declaration public IList<Vector>? VertexNormals { get; set; } Property Value Type Description IList<Vector> | Edit this page View Source Vertices Declaration public IList<Vector>? Vertices { get; set; } Property Value Type Description IList<Vector> Methods | Edit this page View Source Clone() Declaration public Mesh Clone() Returns Type Description Mesh | Edit this page View Source CompactBuffers() Declaration public void CompactBuffers() | Edit this page View Source ComputeHitzone() Declaration public void ComputeHitzone() | Edit this page View Source Duplicate() Declaration public Mesh Duplicate() Returns Type Description Mesh | Edit this page View Source GroupFaceGroups() Declaration public void GroupFaceGroups() | Edit this page View Source MergeLods(IEnumerable<MeshLod>?) Declaration public MeshLod? MergeLods(IEnumerable<MeshLod>? lods) Parameters Type Name Description IEnumerable<MeshLod> lods Returns Type Description MeshLod | Edit this page View Source Move(float, float, float) Declaration public void Move(float moveX, float moveY, float moveZ) Parameters Type Name Description float moveX float moveY float moveZ | Edit this page View Source SortLods() Declaration public void SortLods() | Edit this page View Source SplitLod(MeshLod?) Declaration public void SplitLod(MeshLod? lod) Parameters Type Name Description MeshLod lod"
  },
  "api/JeremyAnsel.Xwa.Opt.MeshDescriptor.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.MeshDescriptor.html",
    "title": "Class MeshDescriptor",
    "keywords": "Class MeshDescriptor Inheritance object MeshDescriptor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: JeremyAnsel.Xwa.Opt Assembly: JeremyAnsel.Xwa.Opt.dll Syntax public class MeshDescriptor Constructors | Edit this page View Source MeshDescriptor() Declaration public MeshDescriptor() Properties | Edit this page View Source Center Declaration public Vector Center { get; set; } Property Value Type Description Vector | Edit this page View Source ExplosionType Declaration public ExplosionTypes ExplosionType { get; set; } Property Value Type Description ExplosionTypes | Edit this page View Source Max Declaration public Vector Max { get; set; } Property Value Type Description Vector | Edit this page View Source MeshType Declaration public MeshType MeshType { get; set; } Property Value Type Description MeshType | Edit this page View Source Min Declaration public Vector Min { get; set; } Property Value Type Description Vector | Edit this page View Source Span Declaration public Vector Span { get; set; } Property Value Type Description Vector | Edit this page View Source Target Declaration public Vector Target { get; set; } Property Value Type Description Vector | Edit this page View Source TargetId Declaration public int TargetId { get; set; } Property Value Type Description int Methods | Edit this page View Source Clone() Declaration public MeshDescriptor Clone() Returns Type Description MeshDescriptor"
  },
  "api/JeremyAnsel.Xwa.Opt.MeshLod.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.MeshLod.html",
    "title": "Class MeshLod",
    "keywords": "Class MeshLod Inheritance object MeshLod Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: JeremyAnsel.Xwa.Opt Assembly: JeremyAnsel.Xwa.Opt.dll Syntax public class MeshLod Constructors | Edit this page View Source MeshLod() Declaration public MeshLod() Properties | Edit this page View Source Distance Declaration public float Distance { get; set; } Property Value Type Description float | Edit this page View Source FaceGroups Declaration public IList<FaceGroup> FaceGroups { get; } Property Value Type Description IList<FaceGroup> | Edit this page View Source TrianglesCount Declaration public int TrianglesCount { get; } Property Value Type Description int | Edit this page View Source VerticesCount Declaration public int VerticesCount { get; } Property Value Type Description int Methods | Edit this page View Source Clone() Declaration public MeshLod Clone() Returns Type Description MeshLod | Edit this page View Source CompactFaceGroups() Declaration public void CompactFaceGroups() | Edit this page View Source GroupFaceGroups() Declaration public void GroupFaceGroups()"
  },
  "api/JeremyAnsel.Xwa.Opt.MeshType.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.MeshType.html",
    "title": "Enum MeshType",
    "keywords": "Enum MeshType Namespace: JeremyAnsel.Xwa.Opt Assembly: JeremyAnsel.Xwa.Opt.dll Syntax public enum MeshType Fields Name Description Antenna BeamSystem Bridge CargoPod CommandSystem CommunicationSystem Custom Default DockingPlatform EnergyGenerator Engine Fuselage GunTurret Hangar Hatch LandingPlatform Launcher MainHull MiscHull PowerRegenerator Reactor RotaryBeamSystem RotaryCommandSystem RotaryCommunicationSystem RotaryGunTurret RotaryLauncher RotaryWing ShieldGenerator SmallGun WeaponSystem1 WeaponSystem2 Wing"
  },
  "api/JeremyAnsel.Xwa.Opt.NodeType.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.NodeType.html",
    "title": "Enum NodeType",
    "keywords": "Enum NodeType Namespace: JeremyAnsel.Xwa.Opt Assembly: JeremyAnsel.Xwa.Opt.dll Syntax public enum NodeType Fields Name Description EngineGlow FaceData FaceGrouping Hardpoint MeshDescriptor MeshVertices NodeGroup NodeReference NodeSwitch NullNode RotationScale Texture TextureAlpha TextureCoordinates VertexNormals"
  },
  "api/JeremyAnsel.Xwa.Opt.Nodes.EngineGlowNode.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Nodes.EngineGlowNode.html",
    "title": "Class EngineGlowNode",
    "keywords": "Class EngineGlowNode Inheritance object Node EngineGlowNode Inherited Members Node.Null Node.Offset Node.NodeType Node.Name Node.Nodes Node.SizeInFile object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) Namespace: JeremyAnsel.Xwa.Opt.Nodes Assembly: JeremyAnsel.Xwa.Opt.dll Syntax public sealed class EngineGlowNode : Node Constructors | Edit this page View Source EngineGlowNode(int) Declaration public EngineGlowNode(int nodesCount = -1) Parameters Type Name Description int nodesCount Properties | Edit this page View Source CoreColor Declaration public uint CoreColor { get; set; } Property Value Type Description uint | Edit this page View Source DataSize Declaration protected override int DataSize { get; } Property Value Type Description int Overrides Node.DataSize | Edit this page View Source Format Declaration public Vector Format { get; set; } Property Value Type Description Vector | Edit this page View Source IsDisabled Declaration public bool IsDisabled { get; set; } Property Value Type Description bool | Edit this page View Source Look Declaration public Vector Look { get; set; } Property Value Type Description Vector | Edit this page View Source OuterColor Declaration public uint OuterColor { get; set; } Property Value Type Description uint | Edit this page View Source Position Declaration public Vector Position { get; set; } Property Value Type Description Vector | Edit this page View Source Right Declaration public Vector Right { get; set; } Property Value Type Description Vector | Edit this page View Source Up Declaration public Vector Up { get; set; } Property Value Type Description Vector Methods | Edit this page View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides Node.ToString()"
  },
  "api/JeremyAnsel.Xwa.Opt.Nodes.FaceDataNode.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Nodes.FaceDataNode.html",
    "title": "Class FaceDataNode",
    "keywords": "Class FaceDataNode Inheritance object Node FaceDataNode Inherited Members Node.Null Node.Offset Node.NodeType Node.Name Node.Nodes Node.SizeInFile object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) Namespace: JeremyAnsel.Xwa.Opt.Nodes Assembly: JeremyAnsel.Xwa.Opt.dll Syntax public sealed class FaceDataNode : Node Constructors | Edit this page View Source FaceDataNode(int, bool) Declaration public FaceDataNode(int nodesCount = -1, bool alloc = true) Parameters Type Name Description int nodesCount bool alloc Properties | Edit this page View Source DataSize Declaration protected override int DataSize { get; } Property Value Type Description int Overrides Node.DataSize | Edit this page View Source EdgesCount Declaration public int EdgesCount { get; set; } Property Value Type Description int | Edit this page View Source Faces Declaration public IList<Face>? Faces { get; set; } Property Value Type Description IList<Face> Methods | Edit this page View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides Node.ToString()"
  },
  "api/JeremyAnsel.Xwa.Opt.Nodes.FaceGroupingNode.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Nodes.FaceGroupingNode.html",
    "title": "Class FaceGroupingNode",
    "keywords": "Class FaceGroupingNode Inheritance object Node FaceGroupingNode Inherited Members Node.Null Node.Offset Node.NodeType Node.Name Node.Nodes Node.SizeInFile Node.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) Namespace: JeremyAnsel.Xwa.Opt.Nodes Assembly: JeremyAnsel.Xwa.Opt.dll Syntax public sealed class FaceGroupingNode : Node Constructors | Edit this page View Source FaceGroupingNode(int) Declaration public FaceGroupingNode(int nodesCount = -1) Parameters Type Name Description int nodesCount Properties | Edit this page View Source DataSize Declaration protected override int DataSize { get; } Property Value Type Description int Overrides Node.DataSize | Edit this page View Source Distances Declaration public IList<float> Distances { get; } Property Value Type Description IList<float>"
  },
  "api/JeremyAnsel.Xwa.Opt.Nodes.HardpointNode.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Nodes.HardpointNode.html",
    "title": "Class HardpointNode",
    "keywords": "Class HardpointNode Inheritance object Node HardpointNode Inherited Members Node.Null Node.Offset Node.NodeType Node.Name Node.Nodes Node.SizeInFile object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) Namespace: JeremyAnsel.Xwa.Opt.Nodes Assembly: JeremyAnsel.Xwa.Opt.dll Syntax public sealed class HardpointNode : Node Constructors | Edit this page View Source HardpointNode(int) Declaration public HardpointNode(int nodesCount = -1) Parameters Type Name Description int nodesCount Properties | Edit this page View Source DataSize Declaration protected override int DataSize { get; } Property Value Type Description int Overrides Node.DataSize | Edit this page View Source HardpointType Declaration public HardpointType HardpointType { get; set; } Property Value Type Description HardpointType | Edit this page View Source Position Declaration public Vector Position { get; set; } Property Value Type Description Vector Methods | Edit this page View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides Node.ToString()"
  },
  "api/JeremyAnsel.Xwa.Opt.Nodes.MeshDescriptorNode.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Nodes.MeshDescriptorNode.html",
    "title": "Class MeshDescriptorNode",
    "keywords": "Class MeshDescriptorNode Inheritance object Node MeshDescriptorNode Inherited Members Node.Null Node.Offset Node.NodeType Node.Name Node.Nodes Node.SizeInFile object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) Namespace: JeremyAnsel.Xwa.Opt.Nodes Assembly: JeremyAnsel.Xwa.Opt.dll Syntax public sealed class MeshDescriptorNode : Node Constructors | Edit this page View Source MeshDescriptorNode(int) Declaration public MeshDescriptorNode(int nodesCount = -1) Parameters Type Name Description int nodesCount Properties | Edit this page View Source Center Declaration public Vector Center { get; set; } Property Value Type Description Vector | Edit this page View Source DataSize Declaration protected override int DataSize { get; } Property Value Type Description int Overrides Node.DataSize | Edit this page View Source ExplosionType Declaration public ExplosionTypes ExplosionType { get; set; } Property Value Type Description ExplosionTypes | Edit this page View Source Max Declaration public Vector Max { get; set; } Property Value Type Description Vector | Edit this page View Source MeshType Declaration public MeshType MeshType { get; set; } Property Value Type Description MeshType | Edit this page View Source Min Declaration public Vector Min { get; set; } Property Value Type Description Vector | Edit this page View Source Span Declaration public Vector Span { get; set; } Property Value Type Description Vector | Edit this page View Source Target Declaration public Vector Target { get; set; } Property Value Type Description Vector | Edit this page View Source TargetId Declaration public int TargetId { get; set; } Property Value Type Description int Methods | Edit this page View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides Node.ToString()"
  },
  "api/JeremyAnsel.Xwa.Opt.Nodes.MeshVerticesNode.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Nodes.MeshVerticesNode.html",
    "title": "Class MeshVerticesNode",
    "keywords": "Class MeshVerticesNode Inheritance object Node MeshVerticesNode Inherited Members Node.Null Node.Offset Node.NodeType Node.Name Node.Nodes Node.SizeInFile object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) Namespace: JeremyAnsel.Xwa.Opt.Nodes Assembly: JeremyAnsel.Xwa.Opt.dll Syntax public sealed class MeshVerticesNode : Node Constructors | Edit this page View Source MeshVerticesNode(int, bool) Declaration public MeshVerticesNode(int nodesCount = -1, bool alloc = true) Parameters Type Name Description int nodesCount bool alloc Properties | Edit this page View Source DataSize Declaration protected override int DataSize { get; } Property Value Type Description int Overrides Node.DataSize | Edit this page View Source Vertices Declaration public IList<Vector>? Vertices { get; set; } Property Value Type Description IList<Vector> Methods | Edit this page View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides Node.ToString()"
  },
  "api/JeremyAnsel.Xwa.Opt.Nodes.Node.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Nodes.Node.html",
    "title": "Class Node",
    "keywords": "Class Node Inheritance object Node EngineGlowNode FaceDataNode FaceGroupingNode HardpointNode MeshDescriptorNode MeshVerticesNode NodeGroupNode NodeReferenceNode NodeSwitchNode RotationScaleNode TextureAlphaNode TextureCoordinatesNode TextureNode VertexNormalsNode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: JeremyAnsel.Xwa.Opt.Nodes Assembly: JeremyAnsel.Xwa.Opt.dll Syntax public abstract class Node Properties | Edit this page View Source DataSize Declaration protected virtual int DataSize { get; } Property Value Type Description int | Edit this page View Source Name Declaration public string? Name { get; set; } Property Value Type Description string | Edit this page View Source NameSize Declaration protected int NameSize { get; } Property Value Type Description int | Edit this page View Source NodeType Declaration public NodeType NodeType { get; } Property Value Type Description NodeType | Edit this page View Source Nodes Declaration public IList<Node>? Nodes { get; } Property Value Type Description IList<Node> | Edit this page View Source NodesOffsetsSize Declaration protected int NodesOffsetsSize { get; } Property Value Type Description int | Edit this page View Source NodesSize Declaration protected int NodesSize { get; } Property Value Type Description int | Edit this page View Source Null Declaration public static Node Null { get; } Property Value Type Description Node | Edit this page View Source Offset Declaration public int Offset { get; } Property Value Type Description int | Edit this page View Source Parameter1 Declaration protected int Parameter1 { get; } Property Value Type Description int | Edit this page View Source Parameter2 Declaration protected int Parameter2 { get; } Property Value Type Description int | Edit this page View Source SizeInFile Declaration public int SizeInFile { get; } Property Value Type Description int Methods | Edit this page View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides object.ToString() | Edit this page View Source WriteName(BinaryWriter) Declaration protected void WriteName(BinaryWriter file) Parameters Type Name Description BinaryWriter file | Edit this page View Source WriteNodes(BinaryWriter, int) Declaration protected void WriteNodes(BinaryWriter file, int offset) Parameters Type Name Description BinaryWriter file int offset | Edit this page View Source WriteNodesOffsets(BinaryWriter, int) Declaration protected void WriteNodesOffsets(BinaryWriter file, int offset) Parameters Type Name Description BinaryWriter file int offset"
  },
  "api/JeremyAnsel.Xwa.Opt.Nodes.NodeGroupNode.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Nodes.NodeGroupNode.html",
    "title": "Class NodeGroupNode",
    "keywords": "Class NodeGroupNode Inheritance object Node NodeGroupNode Inherited Members Node.Null Node.Offset Node.NodeType Node.Name Node.Nodes Node.SizeInFile Node.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) Namespace: JeremyAnsel.Xwa.Opt.Nodes Assembly: JeremyAnsel.Xwa.Opt.dll Syntax public sealed class NodeGroupNode : Node Constructors | Edit this page View Source NodeGroupNode(int) Declaration public NodeGroupNode(int nodesCount = -1) Parameters Type Name Description int nodesCount"
  },
  "api/JeremyAnsel.Xwa.Opt.Nodes.NodeReferenceNode.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Nodes.NodeReferenceNode.html",
    "title": "Class NodeReferenceNode",
    "keywords": "Class NodeReferenceNode Inheritance object Node NodeReferenceNode Inherited Members Node.Null Node.Offset Node.NodeType Node.Name Node.Nodes Node.SizeInFile object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) Namespace: JeremyAnsel.Xwa.Opt.Nodes Assembly: JeremyAnsel.Xwa.Opt.dll Syntax public sealed class NodeReferenceNode : Node Constructors | Edit this page View Source NodeReferenceNode(int) Declaration public NodeReferenceNode(int nodesCount = -1) Parameters Type Name Description int nodesCount Properties | Edit this page View Source DataSize Declaration protected override int DataSize { get; } Property Value Type Description int Overrides Node.DataSize | Edit this page View Source Reference Declaration public string? Reference { get; set; } Property Value Type Description string Methods | Edit this page View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides Node.ToString()"
  },
  "api/JeremyAnsel.Xwa.Opt.Nodes.NodeSizeInFileBuilder.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Nodes.NodeSizeInFileBuilder.html",
    "title": "Class NodeSizeInFileBuilder",
    "keywords": "Class NodeSizeInFileBuilder Inheritance object NodeSizeInFileBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: JeremyAnsel.Xwa.Opt.Nodes Assembly: JeremyAnsel.Xwa.Opt.dll Syntax public static class NodeSizeInFileBuilder Methods | Edit this page View Source EngineGlowNode(string?, int) Declaration public static int EngineGlowNode(string? name, int nodesCount) Parameters Type Name Description string name int nodesCount Returns Type Description int | Edit this page View Source FaceDataNode(string?, int, int) Declaration public static int FaceDataNode(string? name, int nodesCount, int facesCount) Parameters Type Name Description string name int nodesCount int facesCount Returns Type Description int | Edit this page View Source FaceGroupingNode(string?, int, int) Declaration public static int FaceGroupingNode(string? name, int nodesCount, int distancesCount) Parameters Type Name Description string name int nodesCount int distancesCount Returns Type Description int | Edit this page View Source HardpointNode(string?, int) Declaration public static int HardpointNode(string? name, int nodesCount) Parameters Type Name Description string name int nodesCount Returns Type Description int | Edit this page View Source MeshDescriptorNode(string?, int) Declaration public static int MeshDescriptorNode(string? name, int nodesCount) Parameters Type Name Description string name int nodesCount Returns Type Description int | Edit this page View Source MeshVerticesNode(string?, int, int) Declaration public static int MeshVerticesNode(string? name, int nodesCount, int verticesCount) Parameters Type Name Description string name int nodesCount int verticesCount Returns Type Description int | Edit this page View Source Node(string?, int) Declaration public static int Node(string? name, int nodesCount) Parameters Type Name Description string name int nodesCount Returns Type Description int | Edit this page View Source NodeGroupNode(string?, int) Declaration public static int NodeGroupNode(string? name, int nodesCount) Parameters Type Name Description string name int nodesCount Returns Type Description int | Edit this page View Source NodeReferenceNode(string?, int, string?) Declaration public static int NodeReferenceNode(string? name, int nodesCount, string? reference) Parameters Type Name Description string name int nodesCount string reference Returns Type Description int | Edit this page View Source NodeSwitchNode(string?, int) Declaration public static int NodeSwitchNode(string? name, int nodesCount) Parameters Type Name Description string name int nodesCount Returns Type Description int | Edit this page View Source NullNode() Declaration public static int NullNode() Returns Type Description int | Edit this page View Source OptFileNodes(int, bool) Declaration public static int OptFileNodes(int nodesCount, bool includeHeader = true) Parameters Type Name Description int nodesCount bool includeHeader Returns Type Description int | Edit this page View Source RotationScaleNode(string?, int) Declaration public static int RotationScaleNode(string? name, int nodesCount) Parameters Type Name Description string name int nodesCount Returns Type Description int | Edit this page View Source TextureAlphaNode(string?, int, int) Declaration public static int TextureAlphaNode(string? name, int nodesCount, int bytesLength) Parameters Type Name Description string name int nodesCount int bytesLength Returns Type Description int | Edit this page View Source TextureCoordinatesNode(string?, int, int) Declaration public static int TextureCoordinatesNode(string? name, int nodesCount, int textureVerticesCount) Parameters Type Name Description string name int nodesCount int textureVerticesCount Returns Type Description int | Edit this page View Source TextureNode(string?, int, int, int) Declaration public static int TextureNode(string? name, int nodesCount, int palettesLength, int bytesLength) Parameters Type Name Description string name int nodesCount int palettesLength int bytesLength Returns Type Description int | Edit this page View Source VertexNormalsNode(string?, int, int) Declaration public static int VertexNormalsNode(string? name, int nodesCount, int normalsCount) Parameters Type Name Description string name int nodesCount int normalsCount Returns Type Description int"
  },
  "api/JeremyAnsel.Xwa.Opt.Nodes.NodeSwitchNode.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Nodes.NodeSwitchNode.html",
    "title": "Class NodeSwitchNode",
    "keywords": "Class NodeSwitchNode Inheritance object Node NodeSwitchNode Inherited Members Node.Null Node.Offset Node.NodeType Node.Name Node.Nodes Node.SizeInFile Node.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) Namespace: JeremyAnsel.Xwa.Opt.Nodes Assembly: JeremyAnsel.Xwa.Opt.dll Syntax public sealed class NodeSwitchNode : Node Constructors | Edit this page View Source NodeSwitchNode(int) Declaration public NodeSwitchNode(int nodesCount = -1) Parameters Type Name Description int nodesCount"
  },
  "api/JeremyAnsel.Xwa.Opt.Nodes.OptFileNodes.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Nodes.OptFileNodes.html",
    "title": "Class OptFileNodes",
    "keywords": "Class OptFileNodes Inheritance object OptFileNodes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: JeremyAnsel.Xwa.Opt.Nodes Assembly: JeremyAnsel.Xwa.Opt.dll Syntax public class OptFileNodes Constructors | Edit this page View Source OptFileNodes(int) Declaration public OptFileNodes(int nodesCount = -1) Parameters Type Name Description int nodesCount Fields | Edit this page View Source DefaultVersion Declaration public const int DefaultVersion = 5 Field Value Type Description int Properties | Edit this page View Source FileName Declaration public string? FileName { get; } Property Value Type Description string | Edit this page View Source FileSize Declaration public int FileSize { get; } Property Value Type Description int | Edit this page View Source Nodes Declaration public IList<Node> Nodes { get; } Property Value Type Description IList<Node> | Edit this page View Source Version Declaration public int Version { get; } Property Value Type Description int Methods | Edit this page View Source FromFile(string?) Declaration public static OptFileNodes FromFile(string? path) Parameters Type Name Description string path Returns Type Description OptFileNodes | Edit this page View Source FromStream(Stream?) Declaration public static OptFileNodes FromStream(Stream? stream) Parameters Type Name Description Stream stream Returns Type Description OptFileNodes | Edit this page View Source Save(Stream?, bool) Declaration public void Save(Stream? stream, bool includeHeader = true) Parameters Type Name Description Stream stream bool includeHeader | Edit this page View Source Save(string?, bool) Declaration public void Save(string? path, bool includeHeader = true) Parameters Type Name Description string path bool includeHeader"
  },
  "api/JeremyAnsel.Xwa.Opt.Nodes.RotationScaleNode.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Nodes.RotationScaleNode.html",
    "title": "Class RotationScaleNode",
    "keywords": "Class RotationScaleNode Inheritance object Node RotationScaleNode Inherited Members Node.Null Node.Offset Node.NodeType Node.Name Node.Nodes Node.SizeInFile Node.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) Namespace: JeremyAnsel.Xwa.Opt.Nodes Assembly: JeremyAnsel.Xwa.Opt.dll Syntax public sealed class RotationScaleNode : Node Constructors | Edit this page View Source RotationScaleNode(int) Declaration public RotationScaleNode(int nodesCount = -1) Parameters Type Name Description int nodesCount Properties | Edit this page View Source DataSize Declaration protected override int DataSize { get; } Property Value Type Description int Overrides Node.DataSize | Edit this page View Source Look Declaration public Vector Look { get; set; } Property Value Type Description Vector | Edit this page View Source Pivot Declaration public Vector Pivot { get; set; } Property Value Type Description Vector | Edit this page View Source Right Declaration public Vector Right { get; set; } Property Value Type Description Vector | Edit this page View Source Up Declaration public Vector Up { get; set; } Property Value Type Description Vector"
  },
  "api/JeremyAnsel.Xwa.Opt.Nodes.TextureAlphaNode.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Nodes.TextureAlphaNode.html",
    "title": "Class TextureAlphaNode",
    "keywords": "Class TextureAlphaNode Inheritance object Node TextureAlphaNode Inherited Members Node.Null Node.Offset Node.NodeType Node.Name Node.Nodes Node.SizeInFile Node.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) Namespace: JeremyAnsel.Xwa.Opt.Nodes Assembly: JeremyAnsel.Xwa.Opt.dll Syntax public sealed class TextureAlphaNode : Node Constructors | Edit this page View Source TextureAlphaNode(int) Declaration public TextureAlphaNode(int nodesCount = -1) Parameters Type Name Description int nodesCount Properties | Edit this page View Source Bytes Declaration public byte[]? Bytes { get; set; } Property Value Type Description byte[] | Edit this page View Source DataSize Declaration protected override int DataSize { get; } Property Value Type Description int Overrides Node.DataSize"
  },
  "api/JeremyAnsel.Xwa.Opt.Nodes.TextureCoordinatesNode.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Nodes.TextureCoordinatesNode.html",
    "title": "Class TextureCoordinatesNode",
    "keywords": "Class TextureCoordinatesNode Inheritance object Node TextureCoordinatesNode Inherited Members Node.Null Node.Offset Node.NodeType Node.Name Node.Nodes Node.SizeInFile object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) Namespace: JeremyAnsel.Xwa.Opt.Nodes Assembly: JeremyAnsel.Xwa.Opt.dll Syntax public sealed class TextureCoordinatesNode : Node Constructors | Edit this page View Source TextureCoordinatesNode(int, bool) Declaration public TextureCoordinatesNode(int nodesCount = -1, bool alloc = true) Parameters Type Name Description int nodesCount bool alloc Properties | Edit this page View Source DataSize Declaration protected override int DataSize { get; } Property Value Type Description int Overrides Node.DataSize | Edit this page View Source TextureVertices Declaration public IList<TextureCoordinates>? TextureVertices { get; set; } Property Value Type Description IList<TextureCoordinates> Methods | Edit this page View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides Node.ToString()"
  },
  "api/JeremyAnsel.Xwa.Opt.Nodes.TextureNode.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Nodes.TextureNode.html",
    "title": "Class TextureNode",
    "keywords": "Class TextureNode Inheritance object Node TextureNode Inherited Members Node.Null Node.Offset Node.NodeType Node.Name Node.Nodes Node.SizeInFile object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) Namespace: JeremyAnsel.Xwa.Opt.Nodes Assembly: JeremyAnsel.Xwa.Opt.dll Syntax public sealed class TextureNode : Node Constructors | Edit this page View Source TextureNode(int) Declaration public TextureNode(int nodesCount = -1) Parameters Type Name Description int nodesCount Fields | Edit this page View Source DefaultPaletteLength Declaration public const int DefaultPaletteLength = 8192 Field Value Type Description int Properties | Edit this page View Source Bytes Declaration public byte[]? Bytes { get; set; } Property Value Type Description byte[] | Edit this page View Source DataSize Declaration protected override int DataSize { get; } Property Value Type Description int Overrides Node.DataSize | Edit this page View Source Height Declaration public int Height { get; set; } Property Value Type Description int | Edit this page View Source Palettes Declaration public byte[]? Palettes { get; set; } Property Value Type Description byte[] | Edit this page View Source UniqueId Declaration public int UniqueId { get; set; } Property Value Type Description int | Edit this page View Source Width Declaration public int Width { get; set; } Property Value Type Description int Methods | Edit this page View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides Node.ToString()"
  },
  "api/JeremyAnsel.Xwa.Opt.Nodes.VertexNormalsNode.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Nodes.VertexNormalsNode.html",
    "title": "Class VertexNormalsNode",
    "keywords": "Class VertexNormalsNode Inheritance object Node VertexNormalsNode Inherited Members Node.Null Node.Offset Node.NodeType Node.Name Node.Nodes Node.SizeInFile object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) Namespace: JeremyAnsel.Xwa.Opt.Nodes Assembly: JeremyAnsel.Xwa.Opt.dll Syntax public sealed class VertexNormalsNode : Node Constructors | Edit this page View Source VertexNormalsNode(int, bool) Declaration public VertexNormalsNode(int nodesCount = -1, bool alloc = true) Parameters Type Name Description int nodesCount bool alloc Properties | Edit this page View Source DataSize Declaration protected override int DataSize { get; } Property Value Type Description int Overrides Node.DataSize | Edit this page View Source Normals Declaration public IList<Vector>? Normals { get; set; } Property Value Type Description IList<Vector> Methods | Edit this page View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides Node.ToString()"
  },
  "api/JeremyAnsel.Xwa.Opt.Nodes.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Nodes.html",
    "title": "Namespace JeremyAnsel.Xwa.Opt.Nodes",
    "keywords": "Namespace JeremyAnsel.Xwa.Opt.Nodes Classes EngineGlowNode FaceDataNode FaceGroupingNode HardpointNode MeshDescriptorNode MeshVerticesNode Node NodeGroupNode NodeReferenceNode NodeSizeInFileBuilder NodeSwitchNode OptFileNodes RotationScaleNode TextureAlphaNode TextureCoordinatesNode TextureNode VertexNormalsNode"
  },
  "api/JeremyAnsel.Xwa.Opt.OptFile.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.OptFile.html",
    "title": "Class OptFile",
    "keywords": "Class OptFile Inheritance object OptFile Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: JeremyAnsel.Xwa.Opt Assembly: JeremyAnsel.Xwa.Opt.dll Syntax public class OptFile Constructors | Edit this page View Source OptFile() Declaration public OptFile() Fields | Edit this page View Source ScaleFactor Declaration public const float ScaleFactor = 0.024414062 Field Value Type Description float Properties | Edit this page View Source ArePixelsFlipped Declaration public bool ArePixelsFlipped { get; } Property Value Type Description bool | Edit this page View Source EngineGlowsCount Declaration public int EngineGlowsCount { get; } Property Value Type Description int | Edit this page View Source FileName Declaration public string? FileName { get; } Property Value Type Description string | Edit this page View Source HardpointsCount Declaration public int HardpointsCount { get; } Property Value Type Description int | Edit this page View Source MaxSize Declaration public Vector MaxSize { get; } Property Value Type Description Vector | Edit this page View Source MaxTextureVersion Declaration public int MaxTextureVersion { get; } Property Value Type Description int | Edit this page View Source Meshes Declaration public IList<Mesh> Meshes { get; } Property Value Type Description IList<Mesh> | Edit this page View Source MinSize Declaration public Vector MinSize { get; } Property Value Type Description Vector | Edit this page View Source Size Declaration public float Size { get; } Property Value Type Description float | Edit this page View Source SpanSize Declaration public Vector SpanSize { get; } Property Value Type Description Vector | Edit this page View Source Textures Declaration public IDictionary<string, Texture> Textures { get; } Property Value Type Description IDictionary<string, Texture> | Edit this page View Source TexturesBitsPerPixel Declaration public int TexturesBitsPerPixel { get; } Property Value Type Description int | Edit this page View Source Version Declaration public int Version { get; } Property Value Type Description int Methods | Edit this page View Source BuildOptFileNodes() Declaration public OptFileNodes BuildOptFileNodes() Returns Type Description OptFileNodes | Edit this page View Source BuildOptFileNodes(bool) Declaration public OptFileNodes BuildOptFileNodes(bool compactBuffers) Parameters Type Name Description bool compactBuffers Returns Type Description OptFileNodes | Edit this page View Source BuildOptFileNodes(bool, bool) Declaration public OptFileNodes BuildOptFileNodes(bool compactBuffers, bool flipPixels) Parameters Type Name Description bool compactBuffers bool flipPixels Returns Type Description OptFileNodes | Edit this page View Source CanTexturesBeConvertedWithoutLoss() Declaration public bool CanTexturesBeConvertedWithoutLoss() Returns Type Description bool | Edit this page View Source ChangeAxes(int, int, int) Declaration public void ChangeAxes(int axisX, int axisY, int axisZ) Parameters Type Name Description int axisX int axisY int axisZ | Edit this page View Source CheckFlatTextures(bool) Declaration public IList<string> CheckFlatTextures(bool removeFlatTextures) Parameters Type Name Description bool removeFlatTextures Returns Type Description IList<string> | Edit this page View Source CheckPlayability() Declaration public IList<PlayabilityMessage> CheckPlayability() Returns Type Description IList<PlayabilityMessage> | Edit this page View Source Clone() Declaration public OptFile Clone() Returns Type Description OptFile | Edit this page View Source CompactBuffers() Declaration public void CompactBuffers() | Edit this page View Source CompactTextures() Declaration public void CompactTextures() | Edit this page View Source ComputeHitzones() Declaration public void ComputeHitzones() | Edit this page View Source ConvertTextures32To8() Declaration public void ConvertTextures32To8() | Edit this page View Source ConvertTextures8To32() Declaration public void ConvertTextures8To32() | Edit this page View Source ConvertTextures8To32(bool) Declaration public void ConvertTextures8To32(bool generateMipmaps) Parameters Type Name Description bool generateMipmaps | Edit this page View Source FromFile(string?) Declaration public static OptFile FromFile(string? path) Parameters Type Name Description string path Returns Type Description OptFile | Edit this page View Source FromFile(string?, bool) Declaration public static OptFile FromFile(string? path, bool flipPixels) Parameters Type Name Description string path bool flipPixels Returns Type Description OptFile | Edit this page View Source FromStream(Stream?) Declaration public static OptFile FromStream(Stream? stream) Parameters Type Name Description Stream stream Returns Type Description OptFile | Edit this page View Source FromStream(Stream?, bool) Declaration public static OptFile FromStream(Stream? stream, bool flipPixels) Parameters Type Name Description Stream stream bool flipPixels Returns Type Description OptFile | Edit this page View Source GenerateTexturesMipmaps() Declaration public void GenerateTexturesMipmaps() | Edit this page View Source GenerateTexturesNames() Declaration public void GenerateTexturesNames() | Edit this page View Source GetSaveRequiredFileSize() Declaration public int GetSaveRequiredFileSize() Returns Type Description int | Edit this page View Source GetSaveRequiredFileSize(bool) Declaration public int GetSaveRequiredFileSize(bool includeHeader) Parameters Type Name Description bool includeHeader Returns Type Description int | Edit this page View Source GroupFaceGroups() Declaration public void GroupFaceGroups() | Edit this page View Source MergeMeshes(IEnumerable<Mesh>?) Declaration public Mesh? MergeMeshes(IEnumerable<Mesh>? meshes) Parameters Type Name Description IEnumerable<Mesh> meshes Returns Type Description Mesh | Edit this page View Source Move(float, float, float) Declaration public void Move(float moveX, float moveY, float moveZ) Parameters Type Name Description float moveX float moveY float moveZ | Edit this page View Source RemoveTexturesMipmaps() Declaration public void RemoveTexturesMipmaps() | Edit this page View Source RemoveUnusedTextures() Declaration public void RemoveUnusedTextures() | Edit this page View Source Save(Stream?) Declaration public void Save(Stream? stream) Parameters Type Name Description Stream stream | Edit this page View Source Save(Stream?, bool) Declaration public void Save(Stream? stream, bool compactBuffers) Parameters Type Name Description Stream stream bool compactBuffers | Edit this page View Source Save(Stream?, bool, bool) Declaration public void Save(Stream? stream, bool compactBuffers, bool includeHeader) Parameters Type Name Description Stream stream bool compactBuffers bool includeHeader | Edit this page View Source Save(Stream?, bool, bool, bool) Declaration public void Save(Stream? stream, bool compactBuffers, bool includeHeader, bool flipPixels) Parameters Type Name Description Stream stream bool compactBuffers bool includeHeader bool flipPixels | Edit this page View Source Save(string?) Declaration public void Save(string? path) Parameters Type Name Description string path | Edit this page View Source Save(string?, bool) Declaration public void Save(string? path, bool compactBuffers) Parameters Type Name Description string path bool compactBuffers | Edit this page View Source Save(string?, bool, bool) Declaration public void Save(string? path, bool compactBuffers, bool includeHeader) Parameters Type Name Description string path bool compactBuffers bool includeHeader | Edit this page View Source Save(string?, bool, bool, bool) Declaration public void Save(string? path, bool compactBuffers, bool includeHeader, bool flipPixels) Parameters Type Name Description string path bool compactBuffers bool includeHeader bool flipPixels | Edit this page View Source Scale(float) Declaration public void Scale(float scaleFactor) Parameters Type Name Description float scaleFactor | Edit this page View Source Scale(float, float, float) Declaration public void Scale(float scaleX, float scaleY, float scaleZ) Parameters Type Name Description float scaleX float scaleY float scaleZ | Edit this page View Source SplitMesh(Mesh?) Declaration public void SplitMesh(Mesh? mesh) Parameters Type Name Description Mesh mesh"
  },
  "api/JeremyAnsel.Xwa.Opt.PlayabilityChecker.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.PlayabilityChecker.html",
    "title": "Class PlayabilityChecker",
    "keywords": "Class PlayabilityChecker Inheritance object PlayabilityChecker Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: JeremyAnsel.Xwa.Opt Assembly: JeremyAnsel.Xwa.Opt.dll Syntax public static class PlayabilityChecker Methods | Edit this page View Source CheckEngineGlows(OptFile?) Declaration public static IEnumerable<PlayabilityMessage> CheckEngineGlows(OptFile? opt) Parameters Type Name Description OptFile opt Returns Type Description IEnumerable<PlayabilityMessage> | Edit this page View Source CheckFlatTextures(OptFile?) Declaration public static IEnumerable<PlayabilityMessage> CheckFlatTextures(OptFile? opt) Parameters Type Name Description OptFile opt Returns Type Description IEnumerable<PlayabilityMessage> | Edit this page View Source CheckGeometry(OptFile?) Declaration public static IEnumerable<PlayabilityMessage> CheckGeometry(OptFile? opt) Parameters Type Name Description OptFile opt Returns Type Description IEnumerable<PlayabilityMessage> | Edit this page View Source CheckHardpoints(OptFile?) Declaration public static IEnumerable<PlayabilityMessage> CheckHardpoints(OptFile? opt) Parameters Type Name Description OptFile opt Returns Type Description IEnumerable<PlayabilityMessage> | Edit this page View Source CheckPlayability(OptFile?) Declaration public static IList<PlayabilityMessage> CheckPlayability(OptFile? opt) Parameters Type Name Description OptFile opt Returns Type Description IList<PlayabilityMessage> | Edit this page View Source CheckTextures(OptFile?) Declaration public static IEnumerable<PlayabilityMessage> CheckTextures(OptFile? opt) Parameters Type Name Description OptFile opt Returns Type Description IEnumerable<PlayabilityMessage> | Edit this page View Source OptInformations(OptFile?) Declaration public static IEnumerable<PlayabilityMessage> OptInformations(OptFile? opt) Parameters Type Name Description OptFile opt Returns Type Description IEnumerable<PlayabilityMessage>"
  },
  "api/JeremyAnsel.Xwa.Opt.PlayabilityMessage.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.PlayabilityMessage.html",
    "title": "Class PlayabilityMessage",
    "keywords": "Class PlayabilityMessage Inheritance object PlayabilityMessage Implements IEquatable<PlayabilityMessage> IComparable IComparable<PlayabilityMessage> Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: JeremyAnsel.Xwa.Opt Assembly: JeremyAnsel.Xwa.Opt.dll Syntax public class PlayabilityMessage : IEquatable<PlayabilityMessage>, IComparable, IComparable<PlayabilityMessage> Constructors | Edit this page View Source PlayabilityMessage(PlayabilityMessageLevel, string, string, params object?[]) Declaration public PlayabilityMessage(PlayabilityMessageLevel level, string category, string format, params object?[] args) Parameters Type Name Description PlayabilityMessageLevel level string category string format object[] args Properties | Edit this page View Source Category Declaration public string Category { get; } Property Value Type Description string | Edit this page View Source Level Declaration public PlayabilityMessageLevel Level { get; } Property Value Type Description PlayabilityMessageLevel | Edit this page View Source Message Declaration public string Message { get; } Property Value Type Description string Methods | Edit this page View Source Compare(PlayabilityMessage?, PlayabilityMessage?) Declaration public static int Compare(PlayabilityMessage? left, PlayabilityMessage? right) Parameters Type Name Description PlayabilityMessage left PlayabilityMessage right Returns Type Description int | Edit this page View Source CompareTo(PlayabilityMessage?) Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object. Declaration public int CompareTo(PlayabilityMessage? other) Parameters Type Name Description PlayabilityMessage other An object to compare with this instance. Returns Type Description int A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance precedes other in the sort order. Zero This instance occurs in the same position in the sort order as other. Greater than zero This instance follows other in the sort order. | Edit this page View Source CompareTo(object?) Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object. Declaration public int CompareTo(object? obj) Parameters Type Name Description object obj An object to compare with this instance. Returns Type Description int A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance precedes obj in the sort order. Zero This instance occurs in the same position in the sort order as obj. Greater than zero This instance follows obj in the sort order. Exceptions Type Condition ArgumentException obj is not the same type as this instance. | Edit this page View Source Equals(PlayabilityMessage?) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(PlayabilityMessage? other) Parameters Type Name Description PlayabilityMessage other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. | Edit this page View Source Equals(object?) Determines whether the specified object is equal to the current object. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with the current object. Returns Type Description bool true if the specified object is equal to the current object; otherwise, false. Overrides object.Equals(object) | Edit this page View Source GetHashCode() Serves as the default hash function. Declaration public override int GetHashCode() Returns Type Description int A hash code for the current object. Overrides object.GetHashCode() | Edit this page View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides object.ToString() Operators | Edit this page View Source operator ==(PlayabilityMessage?, PlayabilityMessage?) Declaration public static bool operator ==(PlayabilityMessage? left, PlayabilityMessage? right) Parameters Type Name Description PlayabilityMessage left PlayabilityMessage right Returns Type Description bool | Edit this page View Source operator >(PlayabilityMessage?, PlayabilityMessage?) Declaration public static bool operator >(PlayabilityMessage? left, PlayabilityMessage? right) Parameters Type Name Description PlayabilityMessage left PlayabilityMessage right Returns Type Description bool | Edit this page View Source operator >=(PlayabilityMessage?, PlayabilityMessage?) Declaration public static bool operator >=(PlayabilityMessage? left, PlayabilityMessage? right) Parameters Type Name Description PlayabilityMessage left PlayabilityMessage right Returns Type Description bool | Edit this page View Source operator !=(PlayabilityMessage?, PlayabilityMessage?) Declaration public static bool operator !=(PlayabilityMessage? left, PlayabilityMessage? right) Parameters Type Name Description PlayabilityMessage left PlayabilityMessage right Returns Type Description bool | Edit this page View Source operator <(PlayabilityMessage?, PlayabilityMessage?) Declaration public static bool operator <(PlayabilityMessage? left, PlayabilityMessage? right) Parameters Type Name Description PlayabilityMessage left PlayabilityMessage right Returns Type Description bool | Edit this page View Source operator <=(PlayabilityMessage?, PlayabilityMessage?) Declaration public static bool operator <=(PlayabilityMessage? left, PlayabilityMessage? right) Parameters Type Name Description PlayabilityMessage left PlayabilityMessage right Returns Type Description bool Implements IEquatable<T> IComparable IComparable<T>"
  },
  "api/JeremyAnsel.Xwa.Opt.PlayabilityMessageLevel.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.PlayabilityMessageLevel.html",
    "title": "Enum PlayabilityMessageLevel",
    "keywords": "Enum PlayabilityMessageLevel Namespace: JeremyAnsel.Xwa.Opt Assembly: JeremyAnsel.Xwa.Opt.dll Syntax public enum PlayabilityMessageLevel Fields Name Description Error Information Warning"
  },
  "api/JeremyAnsel.Xwa.Opt.RotationScale.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.RotationScale.html",
    "title": "Class RotationScale",
    "keywords": "Class RotationScale Inheritance object RotationScale Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: JeremyAnsel.Xwa.Opt Assembly: JeremyAnsel.Xwa.Opt.dll Syntax public class RotationScale Constructors | Edit this page View Source RotationScale() Declaration public RotationScale() Properties | Edit this page View Source Look Declaration public Vector Look { get; set; } Property Value Type Description Vector | Edit this page View Source Pivot Declaration public Vector Pivot { get; set; } Property Value Type Description Vector | Edit this page View Source Right Declaration public Vector Right { get; set; } Property Value Type Description Vector | Edit this page View Source Up Declaration public Vector Up { get; set; } Property Value Type Description Vector Methods | Edit this page View Source Clone() Declaration public RotationScale Clone() Returns Type Description RotationScale"
  },
  "api/JeremyAnsel.Xwa.Opt.Texture.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Texture.html",
    "title": "Class Texture",
    "keywords": "Class Texture Inheritance object Texture Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: JeremyAnsel.Xwa.Opt Assembly: JeremyAnsel.Xwa.Opt.dll Syntax public class Texture Constructors | Edit this page View Source Texture() Declaration public Texture() Fields | Edit this page View Source DefaultPaletteLength Declaration public const int DefaultPaletteLength = 8192 Field Value Type Description int Properties | Edit this page View Source AlphaIllumData Declaration public byte[]? AlphaIllumData { get; set; } Property Value Type Description byte[] | Edit this page View Source BitsPerPixel Declaration public int BitsPerPixel { get; } Property Value Type Description int | Edit this page View Source HasAlpha Declaration public bool HasAlpha { get; } Property Value Type Description bool | Edit this page View Source Height Declaration public int Height { get; set; } Property Value Type Description int | Edit this page View Source ImageData Declaration public byte[]? ImageData { get; set; } Property Value Type Description byte[] | Edit this page View Source IsIlluminated Declaration public bool IsIlluminated { get; } Property Value Type Description bool | Edit this page View Source MaximumMipmapsCount Declaration public int MaximumMipmapsCount { get; } Property Value Type Description int | Edit this page View Source MaximumMipmapsLength Declaration public int MaximumMipmapsLength { get; } Property Value Type Description int | Edit this page View Source MipmapsCount Declaration public int MipmapsCount { get; } Property Value Type Description int | Edit this page View Source MipmapsLength Declaration public int MipmapsLength { get; } Property Value Type Description int | Edit this page View Source Name Declaration public string? Name { get; set; } Property Value Type Description string | Edit this page View Source Palette Declaration public byte[]? Palette { get; set; } Property Value Type Description byte[] | Edit this page View Source Width Declaration public int Width { get; set; } Property Value Type Description int Methods | Edit this page View Source AreEquals(Texture?, Texture?) Declaration public static bool AreEquals(Texture? textureA, Texture? textureB) Parameters Type Name Description Texture textureA Texture textureB Returns Type Description bool | Edit this page View Source CanBeConvertedWithoutLoss() Declaration public bool CanBeConvertedWithoutLoss() Returns Type Description bool | Edit this page View Source Clone() Declaration public Texture Clone() Returns Type Description Texture | Edit this page View Source Convert32To8() Declaration public void Convert32To8() | Edit this page View Source Convert8To32() Declaration public void Convert8To32() | Edit this page View Source Convert8To32(bool) Declaration public void Convert8To32(bool generateMipmaps) Parameters Type Name Description bool generateMipmaps | Edit this page View Source FromFile(string?) Declaration public static Texture FromFile(string? fileName) Parameters Type Name Description string fileName Returns Type Description Texture | Edit this page View Source FromFile(string?, string?) Declaration public static Texture FromFile(string? fileName, string? fileNameAlpha) Parameters Type Name Description string fileName string fileNameAlpha Returns Type Description Texture | Edit this page View Source FromFile(string?, string?, string?) Declaration public static Texture FromFile(string? fileName, string? fileNameAlpha, string? fileNameIllum) Parameters Type Name Description string fileName string fileNameAlpha string fileNameIllum Returns Type Description Texture | Edit this page View Source FromStream(Stream?) Declaration public static Texture FromStream(Stream? stream) Parameters Type Name Description Stream stream Returns Type Description Texture | Edit this page View Source FromStream(Stream?, Stream?) Declaration public static Texture FromStream(Stream? stream, Stream? streamAlpha) Parameters Type Name Description Stream stream Stream streamAlpha Returns Type Description Texture | Edit this page View Source FromStream(Stream?, Stream?, Stream?) Declaration public static Texture FromStream(Stream? stream, Stream? streamAlpha, Stream? streamIllum) Parameters Type Name Description Stream stream Stream streamAlpha Stream streamIllum Returns Type Description Texture | Edit this page View Source GenerateMipmaps() Declaration public void GenerateMipmaps() | Edit this page View Source GetAlphaMap() Declaration public byte[]? GetAlphaMap() Returns Type Description byte[] | Edit this page View Source GetAlphaMap(int, out int, out int) Declaration public byte[]? GetAlphaMap(int level, out int width, out int height) Parameters Type Name Description int level int width int height Returns Type Description byte[] | Edit this page View Source GetColorMap() Declaration public byte[]? GetColorMap() Returns Type Description byte[] | Edit this page View Source GetColorMap(int, out int, out int) Declaration public byte[]? GetColorMap(int level, out int width, out int height) Parameters Type Name Description int level int width int height Returns Type Description byte[] | Edit this page View Source GetIllumMap() Declaration public byte[]? GetIllumMap() Returns Type Description byte[] | Edit this page View Source GetIllumMap(int, out int, out int) Declaration public byte[]? GetIllumMap(int level, out int width, out int height) Parameters Type Name Description int level int width int height Returns Type Description byte[] | Edit this page View Source GetMipmapAlphaData() Declaration public byte[]? GetMipmapAlphaData() Returns Type Description byte[] | Edit this page View Source GetMipmapAlphaData(int, out int, out int) Declaration public byte[]? GetMipmapAlphaData(int level, out int width, out int height) Parameters Type Name Description int level int width int height Returns Type Description byte[] | Edit this page View Source GetMipmapIllumData() Declaration public byte[]? GetMipmapIllumData() Returns Type Description byte[] | Edit this page View Source GetMipmapIllumData(int, out int, out int) Declaration public byte[]? GetMipmapIllumData(int level, out int width, out int height) Parameters Type Name Description int level int width int height Returns Type Description byte[] | Edit this page View Source GetMipmapImageData() Declaration public byte[]? GetMipmapImageData() Returns Type Description byte[] | Edit this page View Source GetMipmapImageData(int, out int, out int) Declaration public byte[]? GetMipmapImageData(int level, out int width, out int height) Parameters Type Name Description int level int width int height Returns Type Description byte[] | Edit this page View Source MakeColor8bppIlluminated(int) Declaration public void MakeColor8bppIlluminated(int c) Parameters Type Name Description int c | Edit this page View Source MakeColorIlluminated(byte, byte, byte) Declaration public void MakeColorIlluminated(byte red, byte green, byte blue) Parameters Type Name Description byte red byte green byte blue | Edit this page View Source MakeColorIlluminated(byte, byte, byte, byte, byte, byte) Declaration public void MakeColorIlluminated(byte red0, byte green0, byte blue0, byte red1, byte green1, byte blue1) Parameters Type Name Description byte red0 byte green0 byte blue0 byte red1 byte green1 byte blue1 | Edit this page View Source RemoveMipmaps() Declaration public void RemoveMipmaps() | Edit this page View Source RemoveUnusedColors() Declaration public int RemoveUnusedColors() Returns Type Description int | Edit this page View Source ResetPaletteColors() Declaration public void ResetPaletteColors() | Edit this page View Source Save(Stream?, ImageFormat) Declaration public void Save(Stream? stream, ImageFormat format) Parameters Type Name Description Stream stream ImageFormat format | Edit this page View Source Save(Stream?, ImageFormat, int) Declaration public void Save(Stream? stream, ImageFormat format, int level) Parameters Type Name Description Stream stream ImageFormat format int level | Edit this page View Source Save(string?) Declaration public void Save(string? fileName) Parameters Type Name Description string fileName | Edit this page View Source Save(string?, int) Declaration public void Save(string? fileName, int level) Parameters Type Name Description string fileName int level | Edit this page View Source SaveAlphaMap(Stream?, ImageFormat) Declaration public void SaveAlphaMap(Stream? stream, ImageFormat format) Parameters Type Name Description Stream stream ImageFormat format | Edit this page View Source SaveAlphaMap(Stream?, ImageFormat, int) Declaration public void SaveAlphaMap(Stream? stream, ImageFormat format, int level) Parameters Type Name Description Stream stream ImageFormat format int level | Edit this page View Source SaveAlphaMap(string?) Declaration public void SaveAlphaMap(string? fileName) Parameters Type Name Description string fileName | Edit this page View Source SaveAlphaMap(string?, int) Declaration public void SaveAlphaMap(string? fileName, int level) Parameters Type Name Description string fileName int level | Edit this page View Source SaveColorMap(Stream?, ImageFormat) Declaration public void SaveColorMap(Stream? stream, ImageFormat format) Parameters Type Name Description Stream stream ImageFormat format | Edit this page View Source SaveColorMap(Stream?, ImageFormat, int) Declaration public void SaveColorMap(Stream? stream, ImageFormat format, int level) Parameters Type Name Description Stream stream ImageFormat format int level | Edit this page View Source SaveColorMap(string?) Declaration public void SaveColorMap(string? fileName) Parameters Type Name Description string fileName | Edit this page View Source SaveColorMap(string?, int) Declaration public void SaveColorMap(string? fileName, int level) Parameters Type Name Description string fileName int level | Edit this page View Source SaveIllumMap(Stream?, ImageFormat) Declaration public void SaveIllumMap(Stream? stream, ImageFormat format) Parameters Type Name Description Stream stream ImageFormat format | Edit this page View Source SaveIllumMap(Stream?, ImageFormat, int) Declaration public void SaveIllumMap(Stream? stream, ImageFormat format, int level) Parameters Type Name Description Stream stream ImageFormat format int level | Edit this page View Source SaveIllumMap(string?) Declaration public void SaveIllumMap(string? fileName) Parameters Type Name Description string fileName | Edit this page View Source SaveIllumMap(string?, int) Declaration public void SaveIllumMap(string? fileName, int level) Parameters Type Name Description string fileName int level | Edit this page View Source SetAlphaMap(byte[]?) Declaration public void SetAlphaMap(byte[]? alphaData) Parameters Type Name Description byte[] alphaData | Edit this page View Source SetAlphaMap(Stream?) Declaration public void SetAlphaMap(Stream? stream) Parameters Type Name Description Stream stream | Edit this page View Source SetAlphaMap(string?) Declaration public void SetAlphaMap(string? fileName) Parameters Type Name Description string fileName | Edit this page View Source SetIllumMap(byte[]?) Declaration public void SetIllumMap(byte[]? illumData) Parameters Type Name Description byte[] illumData | Edit this page View Source SetIllumMap(Stream?) Declaration public void SetIllumMap(Stream? stream) Parameters Type Name Description Stream stream | Edit this page View Source SetIllumMap(string?) Declaration public void SetIllumMap(string? fileName) Parameters Type Name Description string fileName | Edit this page View Source SetPaletteColors(byte[]?) Declaration public void SetPaletteColors(byte[]? colors) Parameters Type Name Description byte[] colors"
  },
  "api/JeremyAnsel.Xwa.Opt.TextureCoordinates.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.TextureCoordinates.html",
    "title": "Struct TextureCoordinates",
    "keywords": "Struct TextureCoordinates Implements IEquatable<TextureCoordinates> Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: JeremyAnsel.Xwa.Opt Assembly: JeremyAnsel.Xwa.Opt.dll Syntax public struct TextureCoordinates : IEquatable<TextureCoordinates> Constructors | Edit this page View Source TextureCoordinates(float, float) Declaration public TextureCoordinates(float u, float v) Parameters Type Name Description float u float v Fields | Edit this page View Source Empty Declaration public static readonly TextureCoordinates Empty Field Value Type Description TextureCoordinates Properties | Edit this page View Source U Declaration public float U { get; set; } Property Value Type Description float | Edit this page View Source V Declaration public float V { get; set; } Property Value Type Description float Methods | Edit this page View Source Equals(TextureCoordinates) Determines whether the specified object is equal to the current object. Declaration public bool Equals(TextureCoordinates other) Parameters Type Name Description TextureCoordinates other The object to compare with the current object. Returns Type Description bool true if the specified object is equal to the current object; otherwise, false . | Edit this page View Source Equals(object?) Determines whether the specified object is equal to the current object. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with the current object. Returns Type Description bool true if the specified object is equal to the current object; otherwise, false . Overrides ValueType.Equals(object) | Edit this page View Source FromByteArray(byte[], int) Declaration public static TextureCoordinates FromByteArray(byte[] buffer, int start) Parameters Type Name Description byte[] buffer int start Returns Type Description TextureCoordinates | Edit this page View Source GetHashCode() Returns the hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A 32-bit signed integer that is the hash code for this instance. Overrides ValueType.GetHashCode() | Edit this page View Source Parse(string) Declaration public static TextureCoordinates Parse(string value) Parameters Type Name Description string value Returns Type Description TextureCoordinates | Edit this page View Source Read(BinaryReader) Declaration public static TextureCoordinates Read(BinaryReader file) Parameters Type Name Description BinaryReader file Returns Type Description TextureCoordinates | Edit this page View Source SetU(float) Declaration public TextureCoordinates SetU(float value) Parameters Type Name Description float value Returns Type Description TextureCoordinates | Edit this page View Source SetV(float) Declaration public TextureCoordinates SetV(float value) Parameters Type Name Description float value Returns Type Description TextureCoordinates | Edit this page View Source ToByteArray() Declaration public byte[] ToByteArray() Returns Type Description byte[] | Edit this page View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides ValueType.ToString() | Edit this page View Source Write(BinaryWriter) Declaration public void Write(BinaryWriter file) Parameters Type Name Description BinaryWriter file Operators | Edit this page View Source operator ==(TextureCoordinates, TextureCoordinates) Compares two TextureCoordinates objects. The result specifies whether the values of the two objects are equal. Declaration public static bool operator ==(TextureCoordinates left, TextureCoordinates right) Parameters Type Name Description TextureCoordinates left The left TextureCoordinates to compare. TextureCoordinates right The right TextureCoordinates to compare. Returns Type Description bool true if the values of left and right are equal; otherwise, false . | Edit this page View Source operator !=(TextureCoordinates, TextureCoordinates) Compares two TextureCoordinates objects. The result specifies whether the values of the two objects are unequal. Declaration public static bool operator !=(TextureCoordinates left, TextureCoordinates right) Parameters Type Name Description TextureCoordinates left The left TextureCoordinates to compare. TextureCoordinates right The right TextureCoordinates to compare. Returns Type Description bool true if the values of left and right differ; otherwise, false . Implements IEquatable<T>"
  },
  "api/JeremyAnsel.Xwa.Opt.Vector.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.Vector.html",
    "title": "Struct Vector",
    "keywords": "Struct Vector Implements IEquatable<Vector> Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: JeremyAnsel.Xwa.Opt Assembly: JeremyAnsel.Xwa.Opt.dll Syntax public struct Vector : IEquatable<Vector> Constructors | Edit this page View Source Vector(float, float, float) Declaration public Vector(float x, float y, float z) Parameters Type Name Description float x float y float z Fields | Edit this page View Source Empty Declaration public static readonly Vector Empty Field Value Type Description Vector Properties | Edit this page View Source X Declaration public float X { get; set; } Property Value Type Description float | Edit this page View Source Y Declaration public float Y { get; set; } Property Value Type Description float | Edit this page View Source Z Declaration public float Z { get; set; } Property Value Type Description float Methods | Edit this page View Source Abs() Declaration public Vector Abs() Returns Type Description Vector | Edit this page View Source Equals(Vector) Determines whether the specified object is equal to the current object. Declaration public bool Equals(Vector other) Parameters Type Name Description Vector other The object to compare with the current object. Returns Type Description bool true if the specified object is equal to the current object; otherwise, false . | Edit this page View Source Equals(object?) Determines whether the specified object is equal to the current object. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with the current object. Returns Type Description bool true if the specified object is equal to the current object; otherwise, false . Overrides ValueType.Equals(object) | Edit this page View Source FromByteArray(byte[], int) Declaration public static Vector FromByteArray(byte[] buffer, int start) Parameters Type Name Description byte[] buffer int start Returns Type Description Vector | Edit this page View Source GetHashCode() Returns the hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A 32-bit signed integer that is the hash code for this instance. Overrides ValueType.GetHashCode() | Edit this page View Source Move(float, float, float) Declaration public Vector Move(float moveX, float moveY, float moveZ) Parameters Type Name Description float moveX float moveY float moveZ Returns Type Description Vector | Edit this page View Source Normal(Vector, Vector, Vector) Declaration public static Vector Normal(Vector a, Vector b, Vector c) Parameters Type Name Description Vector a Vector b Vector c Returns Type Description Vector | Edit this page View Source Parse(string) Declaration public static Vector Parse(string value) Parameters Type Name Description string value Returns Type Description Vector | Edit this page View Source Read(BinaryReader) Declaration public static Vector Read(BinaryReader file) Parameters Type Name Description BinaryReader file Returns Type Description Vector | Edit this page View Source Scale(float, float, float) Declaration public Vector Scale(float scaleX, float scaleY, float scaleZ) Parameters Type Name Description float scaleX float scaleY float scaleZ Returns Type Description Vector | Edit this page View Source SetX(float) Declaration public Vector SetX(float value) Parameters Type Name Description float value Returns Type Description Vector | Edit this page View Source SetY(float) Declaration public Vector SetY(float value) Parameters Type Name Description float value Returns Type Description Vector | Edit this page View Source SetZ(float) Declaration public Vector SetZ(float value) Parameters Type Name Description float value Returns Type Description Vector | Edit this page View Source ToByteArray() Declaration public byte[] ToByteArray() Returns Type Description byte[] | Edit this page View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides ValueType.ToString() | Edit this page View Source Write(BinaryWriter) Declaration public void Write(BinaryWriter file) Parameters Type Name Description BinaryWriter file Operators | Edit this page View Source operator ==(Vector, Vector) Compares two Vector objects. The result specifies whether the values of the two objects are equal. Declaration public static bool operator ==(Vector left, Vector right) Parameters Type Name Description Vector left The left Vector to compare. Vector right The right Vector to compare. Returns Type Description bool true if the values of left and right are equal; otherwise, false . | Edit this page View Source operator !=(Vector, Vector) Compares two Vector objects. The result specifies whether the values of the two objects are unequal. Declaration public static bool operator !=(Vector left, Vector right) Parameters Type Name Description Vector left The left Vector to compare. Vector right The right Vector to compare. Returns Type Description bool true if the values of left and right differ; otherwise, false . Implements IEquatable<T>"
  },
  "api/JeremyAnsel.Xwa.Opt.html": {
    "href": "api/JeremyAnsel.Xwa.Opt.html",
    "title": "Namespace JeremyAnsel.Xwa.Opt",
    "keywords": "Namespace JeremyAnsel.Xwa.Opt Classes EngineGlow Face FaceGroup Hardpoint Mesh MeshDescriptor MeshLod OptFile PlayabilityChecker PlayabilityMessage RotationScale Texture Structs Indices TextureCoordinates Vector Enums ExplosionTypes HardpointType MeshType NodeType PlayabilityMessageLevel"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "JeremyAnsel.Xwa.Opt",
    "keywords": "JeremyAnsel.Xwa.Opt This is the documentation for JeremyAnsel.Xwa.Opt."
  },
  "index.html": {
    "href": "index.html",
    "title": "JeremyAnsel.Xwa.Opt",
    "keywords": "JeremyAnsel.Xwa.Opt JeremyAnsel.Xwa.Opt is a .Net library to handle X-Wing Alliance's OPT files."
  }
}